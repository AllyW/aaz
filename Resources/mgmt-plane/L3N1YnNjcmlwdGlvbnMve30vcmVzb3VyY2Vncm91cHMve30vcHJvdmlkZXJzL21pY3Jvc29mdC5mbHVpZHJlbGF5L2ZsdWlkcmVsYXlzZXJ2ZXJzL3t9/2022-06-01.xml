<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers/{}" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJzL3tmbHVpZFJlbGF5U2VydmVyTmFtZX0=/V/MjAyMi0wNi0wMQ=="/>
  <commandGroup name="fluid-relay server">
    <command name="show" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers/{}" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJzL3tmbHVpZFJlbGF5U2VydmVyTmFtZX0=/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fluidRelayServerName" options="server-name name n" required="True" idPart="name">
          <help short="The Fluid Relay server resource name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FluidRelayServers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}">
          <request method="get">
            <path>
              <param type="string" name="fluidRelayServerName" arg="$Path.fluidRelayServerName" required="True"/>
              <param type="string" name="resourceGroup" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.FluidRelay/fluidRelayServers/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryption">
                      <prop type="object" name="customerManagedKeyEncryption">
                        <prop type="object" name="keyEncryptionKeyIdentity">
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="string" name="keyEncryptionKeyUrl"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="fluidRelayEndpoints">
                      <prop readOnly="True" type="array<string>" name="ordererEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="serviceEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="storageEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="frsTenantId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storagesku">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-06-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers/{}" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJzL3tmbHVpZFJlbGF5U2VydmVyTmFtZX0=/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fluidRelayServerName" options="server-name name n" required="True" idPart="name">
          <help short="The Fluid Relay server resource name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FluidRelayServers_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}">
          <request method="delete">
            <path>
              <param type="string" name="fluidRelayServerName" arg="$Path.fluidRelayServerName" required="True"/>
              <param type="string" name="resourceGroup" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers/{}" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJzL3tmbHVpZFJlbGF5U2VydmVyTmFtZX0=/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fluidRelayServerName" options="server-name name n" required="True" idPart="name">
          <help short="The Fluid Relay server resource name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="CustomerManagedKeyEncryption">
        <arg type="object" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity" options="key-identity" group="CustomerManagedKeyEncryption">
          <help short="All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."/>
          <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.identityType" options="identity-type">
            <help short="Values can be SystemAssigned or UserAssigned"/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.userAssignedIdentityResourceId" options="user-assigned-identities">
            <help short="user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyUrl" options="key-url" group="CustomerManagedKeyEncryption">
          <help short="key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.provisioningState" options="provisioning-state" group="Properties">
          <help short="Provision states for FluidRelay RP"/>
          <enum>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.storagesku" options="sku" group="Properties">
          <help short="Sku of the storage associated with the resource"/>
          <enum>
            <item name="basic" value="&quot;basic&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The type of identity used for the resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="The identity type."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the resource."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FluidRelayServers_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}">
          <request method="put">
            <path>
              <param type="string" name="fluidRelayServerName" arg="$Path.fluidRelayServerName" required="True"/>
              <param type="string" name="resourceGroup" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryption">
                      <prop type="object" name="customerManagedKeyEncryption">
                        <prop type="object" name="keyEncryptionKeyIdentity" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity">
                          <prop type="string" name="identityType" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="userAssignedIdentityResourceId" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="string" name="keyEncryptionKeyUrl" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyUrl"/>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$resource.properties.provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storagesku" arg="$resource.properties.storagesku">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.FluidRelay/fluidRelayServers/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryption">
                      <prop type="object" name="customerManagedKeyEncryption">
                        <prop type="object" name="keyEncryptionKeyIdentity">
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="string" name="keyEncryptionKeyUrl"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="fluidRelayEndpoints">
                      <prop readOnly="True" type="array<string>" name="ordererEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="serviceEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="storageEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="frsTenantId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storagesku">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers/{}" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJzL3tmbHVpZFJlbGF5U2VydmVyTmFtZX0=/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fluidRelayServerName" options="server-name name n" required="True" idPart="name">
          <help short="The Fluid Relay server resource name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="CustomerManagedKeyEncryption">
        <arg type="object" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity" options="key-identity" group="CustomerManagedKeyEncryption">
          <help short="All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."/>
          <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.identityType" options="identity-type">
            <help short="Values can be SystemAssigned or UserAssigned"/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.userAssignedIdentityResourceId" options="user-assigned-identities">
            <help short="user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyUrl" options="key-url" group="CustomerManagedKeyEncryption">
          <help short="key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The type of identity used for the resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="The identity type."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the resource."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="string" var="$resource.location" options="location" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FluidRelayServers_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}">
          <request method="patch">
            <path>
              <param type="string" name="fluidRelayServerName" arg="$Path.fluidRelayServerName" required="True"/>
              <param type="string" name="resourceGroup" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="location" arg="$resource.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryption">
                      <prop type="object" name="customerManagedKeyEncryption">
                        <prop type="object" name="keyEncryptionKeyIdentity" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity">
                          <prop type="string" name="identityType" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="userAssignedIdentityResourceId" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyIdentity.userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="string" name="keyEncryptionKeyUrl" arg="$resource.properties.encryption.customerManagedKeyEncryption.keyEncryptionKeyUrl"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.FluidRelay/fluidRelayServers/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryption">
                      <prop type="object" name="customerManagedKeyEncryption">
                        <prop type="object" name="keyEncryptionKeyIdentity">
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="string" name="keyEncryptionKeyUrl"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="fluidRelayEndpoints">
                      <prop readOnly="True" type="array<string>" name="ordererEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="serviceEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="storageEndpoints">
                        <item readOnly="True" type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="frsTenantId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storagesku">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
