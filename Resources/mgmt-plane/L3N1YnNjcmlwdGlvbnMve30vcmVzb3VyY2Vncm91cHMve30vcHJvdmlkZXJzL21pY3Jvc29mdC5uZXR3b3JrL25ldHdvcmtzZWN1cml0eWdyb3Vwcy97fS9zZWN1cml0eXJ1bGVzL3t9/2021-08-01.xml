<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
  <commandGroup name="network nsg rule">
    <command name="show" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="get">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Ah&quot;"/>
                        <item value="&quot;Esp&quot;"/>
                        <item value="&quot;Icmp&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityRules_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="delete">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$securityRuleParameters.properties.access" options="access">
          <help short="Allowed values: Allow, Deny."/>
          <default value="&quot;Allow&quot;"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.description" options="description">
          <help short="Rule description."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.direction" options="direction">
          <help short="Allowed values: Inbound, Outbound."/>
          <default value="&quot;Inbound&quot;"/>
          <enum>
            <item name="Inbound" value="&quot;Inbound&quot;"/>
            <item name="Outbound" value="&quot;Outbound&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$securityRuleParameters.properties.priority" options="priority">
          <help short="Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.protocol" options="protocol">
          <help short="etwork protocol this rule applies to.  Allowed values: *, Ah, Esp, Icmp, Tcp, Udp."/>
          <default value="&quot;*&quot;"/>
          <enum>
            <item name="*" value="&quot;*&quot;"/>
            <item name="Ah" value="&quot;Ah&quot;"/>
            <item name="Esp" value="&quot;Esp&quot;"/>
            <item name="Icmp" value="&quot;Icmp&quot;"/>
            <item name="Tcp" value="&quot;Tcp&quot;"/>
            <item name="Udp" value="&quot;Udp&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg type="array<string>" var="$securityRuleParameters.properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Destination">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. Default: *."/>
          <item type="string"/>
        </arg>
        <arg type="array<@ApplicationSecurityGroup_create>" var="$securityRuleParameters.properties.destinationApplicationSecurityGroups" options="destination-asgs" group="Destination">
          <help short="Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID."/>
          <item type="@ApplicationSecurityGroup_create"/>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.destinationPortRanges" options="destination-port-ranges" group="Destination">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports.  Default: 80."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$securityRuleParameters.properties.destinationAddressPrefix" options="destination-address-prefix" hide="True" group="Properties">
          <help short="Space-separated list of CIDR prefixes or IP ranges.  Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="&quot;*&quot;"/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.destinationPortRange" options="destination-port-range" hide="True" group="Properties">
          <help short="Port or port range between 0-65535. Use '*' to match all ports."/>
          <default value="&quot;80&quot;"/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.sourceAddressPrefix" options="source-address-prefix" hide="True" group="Properties">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork',                                      'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="&quot;*&quot;"/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.sourcePortRange" options="source-port-range" hide="True" group="Properties">
          <help short="Port or port range between 0-65535. Use '*' to match all ports."/>
          <default value="&quot;*&quot;"/>
        </arg>
      </argGroup>
      <argGroup name="SecurityRuleParameters">
        <arg type="ResourceId" var="$securityRuleParameters.id" options="id" hide="True" group="SecurityRuleParameters">
          <help short="Resource ID."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.type" options="type" hide="True" group="SecurityRuleParameters">
          <help short="The type of the resource."/>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg type="array<string>" var="$securityRuleParameters.properties.sourceAddressPrefixes" options="source-address-prefixes" group="Source">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. Default: *."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$securityRuleParameters.properties.sourceApplicationSecurityGroups" options="source-asgs" group="Source">
          <help short="Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID."/>
          <item type="object" cls="ApplicationSecurityGroup_create">
            <arg type="ResourceId" var="@ApplicationSecurityGroup_create.id" options="id" hide="True">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@ApplicationSecurityGroup_create.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg type="object" var="@ApplicationSecurityGroup_create.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.sourcePortRanges" options="source-port-ranges" group="Source">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports.  Default: *."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityRules_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="put">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="securityRuleParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$securityRuleParameters.id"/>
                  <prop type="string" name="name" arg="$Path.securityRuleName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" arg="$securityRuleParameters.properties.access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$securityRuleParameters.properties.description"/>
                    <prop type="string" name="destinationAddressPrefix" arg="$securityRuleParameters.properties.destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes" arg="$securityRuleParameters.properties.destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_create>" name="destinationApplicationSecurityGroups" arg="$securityRuleParameters.properties.destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_create"/>
                    </prop>
                    <prop type="string" name="destinationPortRange" arg="$securityRuleParameters.properties.destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges" arg="$securityRuleParameters.properties.destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" arg="$securityRuleParameters.properties.direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority" arg="$securityRuleParameters.properties.priority"/>
                    <prop type="string" name="protocol" arg="$securityRuleParameters.properties.protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Ah&quot;"/>
                        <item value="&quot;Esp&quot;"/>
                        <item value="&quot;Icmp&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceAddressPrefix" arg="$securityRuleParameters.properties.sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes" arg="$securityRuleParameters.properties.sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="$securityRuleParameters.properties.sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_create">
                        <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_create.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_create.location"/>
                        <prop type="object" name="tags" arg="@ApplicationSecurityGroup_create.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange" arg="$securityRuleParameters.properties.sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges" arg="$securityRuleParameters.properties.sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type" arg="$securityRuleParameters.type"/>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Ah&quot;"/>
                        <item value="&quot;Esp&quot;"/>
                        <item value="&quot;Icmp&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$securityRuleParameters.properties.access" options="access">
          <help short="Allowed values: Allow, Deny."/>
          <default value="&quot;Allow&quot;"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.description" options="description">
          <help short="Rule description."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.direction" options="direction">
          <help short="Allowed values: Inbound, Outbound."/>
          <default value="&quot;Inbound&quot;"/>
          <enum>
            <item name="Inbound" value="&quot;Inbound&quot;"/>
            <item name="Outbound" value="&quot;Outbound&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$securityRuleParameters.properties.priority" options="priority">
          <help short="Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.protocol" options="protocol">
          <help short="etwork protocol this rule applies to.  Allowed values: *, Ah, Esp, Icmp, Tcp, Udp."/>
          <default value="&quot;*&quot;"/>
          <enum>
            <item name="*" value="&quot;*&quot;"/>
            <item name="Ah" value="&quot;Ah&quot;"/>
            <item name="Esp" value="&quot;Esp&quot;"/>
            <item name="Icmp" value="&quot;Icmp&quot;"/>
            <item name="Tcp" value="&quot;Tcp&quot;"/>
            <item name="Udp" value="&quot;Udp&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Destination">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. Default: *."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<@ApplicationSecurityGroup_update>" var="$securityRuleParameters.properties.destinationApplicationSecurityGroups" options="destination-asgs" group="Destination">
          <help short="Space-separated list of application security group names or supports one application security group name or ID."/>
          <item nullable="True" type="@ApplicationSecurityGroup_update"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.destinationPortRanges" options="destination-port-ranges" group="Destination">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports.  Default: 80."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.destinationAddressPrefix" options="destination-address-prefix" hide="True" group="Properties">
          <help short="Space-separated list of CIDR prefixes or IP ranges.  Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="&quot;*&quot;"/>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.destinationPortRange" options="destination-port-range" hide="True" group="Properties">
          <help short="Port or port range between 0-65535. Use '*' to match all ports."/>
          <default value="&quot;80&quot;"/>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.sourceAddressPrefix" options="source-address-prefix" hide="True" group="Properties">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork',                                      'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="&quot;*&quot;"/>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.sourcePortRange" options="source-port-range" hide="True" group="Properties">
          <help short="Port or port range between 0-65535. Use '*' to match all ports."/>
          <default value="&quot;*&quot;"/>
        </arg>
      </argGroup>
      <argGroup name="SecurityRuleParameters">
        <arg nullable="True" type="ResourceId" var="$securityRuleParameters.id" options="id" hide="True" group="SecurityRuleParameters">
          <help short="Resource ID."/>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.type" options="type" hide="True" group="SecurityRuleParameters">
          <help short="The type of the resource."/>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.sourceAddressPrefixes" options="source-address-prefixes" group="Source">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. Default: *."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$securityRuleParameters.properties.sourceApplicationSecurityGroups" options="source-asgs" group="Source">
          <help short="Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID."/>
          <item nullable="True" type="object" cls="ApplicationSecurityGroup_update">
            <arg nullable="True" type="ResourceId" var="@ApplicationSecurityGroup_update.id" options="id" hide="True">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="@ApplicationSecurityGroup_update.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg nullable="True" type="object" var="@ApplicationSecurityGroup_update.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.sourcePortRanges" options="source-port-ranges" group="Source">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports.  Default: *."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="get">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SecurityRule_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Ah&quot;"/>
                        <item value="&quot;Esp&quot;"/>
                        <item value="&quot;Icmp&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="securityRuleParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$securityRuleParameters.id"/>
              <prop type="string" name="name" arg="$Path.securityRuleName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="access" arg="$securityRuleParameters.properties.access" required="True">
                  <enum>
                    <item value="&quot;Allow&quot;"/>
                    <item value="&quot;Deny&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$securityRuleParameters.properties.description"/>
                <prop type="string" name="destinationAddressPrefix" arg="$securityRuleParameters.properties.destinationAddressPrefix"/>
                <prop type="array<string>" name="destinationAddressPrefixes" arg="$securityRuleParameters.properties.destinationAddressPrefixes">
                  <item type="string"/>
                </prop>
                <prop type="array<@ApplicationSecurityGroup_update>" name="destinationApplicationSecurityGroups" arg="$securityRuleParameters.properties.destinationApplicationSecurityGroups">
                  <item type="@ApplicationSecurityGroup_update"/>
                </prop>
                <prop type="string" name="destinationPortRange" arg="$securityRuleParameters.properties.destinationPortRange"/>
                <prop type="array<string>" name="destinationPortRanges" arg="$securityRuleParameters.properties.destinationPortRanges">
                  <item type="string"/>
                </prop>
                <prop type="string" name="direction" arg="$securityRuleParameters.properties.direction" required="True">
                  <enum>
                    <item value="&quot;Inbound&quot;"/>
                    <item value="&quot;Outbound&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="priority" arg="$securityRuleParameters.properties.priority"/>
                <prop type="string" name="protocol" arg="$securityRuleParameters.properties.protocol" required="True">
                  <enum>
                    <item value="&quot;*&quot;"/>
                    <item value="&quot;Ah&quot;"/>
                    <item value="&quot;Esp&quot;"/>
                    <item value="&quot;Icmp&quot;"/>
                    <item value="&quot;Tcp&quot;"/>
                    <item value="&quot;Udp&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="sourceAddressPrefix" arg="$securityRuleParameters.properties.sourceAddressPrefix"/>
                <prop type="array<string>" name="sourceAddressPrefixes" arg="$securityRuleParameters.properties.sourceAddressPrefixes">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="$securityRuleParameters.properties.sourceApplicationSecurityGroups">
                  <item type="object" cls="ApplicationSecurityGroup_update">
                    <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_update.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_update.location"/>
                    <prop type="object" name="tags" arg="@ApplicationSecurityGroup_update.tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="sourcePortRange" arg="$securityRuleParameters.properties.sourcePortRange"/>
                <prop type="array<string>" name="sourcePortRanges" arg="$securityRuleParameters.properties.sourcePortRanges">
                  <item type="string"/>
                </prop>
              </prop>
              <prop type="string" name="type" arg="$securityRuleParameters.type"/>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="SecurityRules_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="put">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SecurityRule_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
