<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}" version="2022-08-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9/V/MjAyMi0wOC0wMQ=="/>
  <commandGroup name="network-function traffic-collector">
    <command name="show" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}" version="2022-08-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureTrafficCollectorName" options="traffic-collector-name name n" required="True" idPart="name">
          <help short="Azure Traffic Collector name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureTrafficCollectors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}">
          <request method="get">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="collectorPolicies">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}/collectorPolicies/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" required="True"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="emissionPolicies">
                            <item type="object">
                              <prop type="array<object>" name="emissionDestinations">
                                <item type="object">
                                  <prop type="string" name="destinationType">
                                    <enum>
                                      <item value="&quot;AzureMonitor&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="emissionType">
                                <enum>
                                  <item value="&quot;IPFIX&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="ingestionPolicy">
                            <prop type="array<object>" name="ingestionSources">
                              <item type="object">
                                <prop type="string" name="resourceId"/>
                                <prop type="string" name="sourceType">
                                  <enum>
                                    <item value="&quot;Resource&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="ingestionType">
                              <enum>
                                <item value="&quot;IPFIX&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData">
                          <prop readOnly="True" type="dateTime" name="createdAt"/>
                          <prop readOnly="True" type="string" name="createdBy"/>
                          <prop readOnly="True" type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop readOnly="True" type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}" version="2022-08-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureTrafficCollectorName" options="traffic-collector-name name n" required="True" idPart="name">
          <help short="Azure Traffic Collector name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureTrafficCollectors_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}">
          <request method="delete">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}" version="2022-08-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureTrafficCollectorName" options="traffic-collector-name name n" required="True" idPart="name">
          <help short="Azure Traffic Collector name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.collectorPolicies" options="collector-policies" group="Properties">
          <help short="Collector Policies for Azure Traffic Collector."/>
          <item type="object">
            <arg type="ResourceLocation" var="$parameters.properties.collectorPolicies[].location" options="location l" required="True">
              <help short="Resource location."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies" options="emission-policies" group="Properties">
              <help short="Emission policies."/>
              <item type="object">
                <arg type="array<object>" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations" options="emission-destinations">
                  <help short="Emission policy destinations."/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations[].destinationType" options="destination-type">
                      <help short="Emission destination type."/>
                      <enum>
                        <item name="AzureMonitor" value="&quot;AzureMonitor&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionType" options="emission-type">
                  <help short="Emission format type."/>
                  <enum>
                    <item name="IPFIX" value="&quot;IPFIX&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="object" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy" options="ingestion-policy" group="Properties">
              <help short="Ingestion policies."/>
              <arg type="array<object>" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources" options="ingestion-sources">
                <help short="Ingestion Sources."/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].resourceId" options="resource-id">
                    <help short="Resource ID."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].sourceType" options="source-type">
                    <help short="Ingestion source type."/>
                    <enum>
                      <item name="Resource" value="&quot;Resource&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionType" options="ingestion-type">
                <help short="The ingestion type."/>
                <enum>
                  <item name="IPFIX" value="&quot;IPFIX&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.collectorPolicies[].tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="AzureTrafficCollectors_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}">
          <request method="put">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="collectorPolicies" arg="$parameters.properties.collectorPolicies">
                      <item type="object">
                        <prop type="ResourceLocation" name="location" arg="$parameters.properties.collectorPolicies[].location" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="emissionPolicies" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies">
                            <item type="object">
                              <prop type="array<object>" name="emissionDestinations" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations">
                                <item type="object">
                                  <prop type="string" name="destinationType" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations[].destinationType">
                                    <enum>
                                      <item value="&quot;AzureMonitor&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="emissionType" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionType">
                                <enum>
                                  <item value="&quot;IPFIX&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="ingestionPolicy" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy">
                            <prop type="array<object>" name="ingestionSources" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources">
                              <item type="object">
                                <prop type="string" name="resourceId" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].resourceId"/>
                                <prop type="string" name="sourceType" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].sourceType">
                                  <enum>
                                    <item value="&quot;Resource&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="ingestionType" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionType">
                              <enum>
                                <item value="&quot;IPFIX&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="object" name="tags" arg="$parameters.properties.collectorPolicies[].tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="collectorPolicies">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}/collectorPolicies/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" required="True"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="emissionPolicies">
                            <item type="object">
                              <prop type="array<object>" name="emissionDestinations">
                                <item type="object">
                                  <prop type="string" name="destinationType">
                                    <enum>
                                      <item value="&quot;AzureMonitor&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="emissionType">
                                <enum>
                                  <item value="&quot;IPFIX&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="ingestionPolicy">
                            <prop type="array<object>" name="ingestionSources">
                              <item type="object">
                                <prop type="string" name="resourceId"/>
                                <prop type="string" name="sourceType">
                                  <enum>
                                    <item value="&quot;Resource&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="ingestionType">
                              <enum>
                                <item value="&quot;IPFIX&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData">
                          <prop readOnly="True" type="dateTime" name="createdAt"/>
                          <prop readOnly="True" type="string" name="createdBy"/>
                          <prop readOnly="True" type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop readOnly="True" type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}" version="2022-08-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureTrafficCollectorName" options="traffic-collector-name name n" required="True" idPart="name">
          <help short="Azure Traffic Collector name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.collectorPolicies" options="collector-policies" group="Properties">
          <help short="Collector Policies for Azure Traffic Collector."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<object>" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies" options="emission-policies" group="Properties">
              <help short="Emission policies."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<object>" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations" options="emission-destinations">
                  <help short="Emission policy destinations."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations[].destinationType" options="destination-type">
                      <help short="Emission destination type."/>
                      <enum>
                        <item name="AzureMonitor" value="&quot;AzureMonitor&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionType" options="emission-type">
                  <help short="Emission format type."/>
                  <enum>
                    <item name="IPFIX" value="&quot;IPFIX&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy" options="ingestion-policy" group="Properties">
              <help short="Ingestion policies."/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources" options="ingestion-sources">
                <help short="Ingestion Sources."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].resourceId" options="resource-id">
                    <help short="Resource ID."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].sourceType" options="source-type">
                    <help short="Ingestion source type."/>
                    <enum>
                      <item name="Resource" value="&quot;Resource&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionType" options="ingestion-type">
                <help short="The ingestion type."/>
                <enum>
                  <item name="IPFIX" value="&quot;IPFIX&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.collectorPolicies[].tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="AzureTrafficCollectors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}">
          <request method="get">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AzureTrafficCollector_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="collectorPolicies">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}/collectorPolicies/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" required="True"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="emissionPolicies">
                            <item type="object">
                              <prop type="array<object>" name="emissionDestinations">
                                <item type="object">
                                  <prop type="string" name="destinationType">
                                    <enum>
                                      <item value="&quot;AzureMonitor&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="emissionType">
                                <enum>
                                  <item value="&quot;IPFIX&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="ingestionPolicy">
                            <prop type="array<object>" name="ingestionSources">
                              <item type="object">
                                <prop type="string" name="resourceId"/>
                                <prop type="string" name="sourceType">
                                  <enum>
                                    <item value="&quot;Resource&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="ingestionType">
                              <enum>
                                <item value="&quot;IPFIX&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData">
                          <prop readOnly="True" type="dateTime" name="createdAt"/>
                          <prop readOnly="True" type="string" name="createdBy"/>
                          <prop readOnly="True" type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop readOnly="True" type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="collectorPolicies" arg="$parameters.properties.collectorPolicies">
                  <item type="object">
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<object>" name="emissionPolicies" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies">
                        <item type="object">
                          <prop type="array<object>" name="emissionDestinations" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations">
                            <item type="object">
                              <prop type="string" name="destinationType" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionDestinations[].destinationType">
                                <enum>
                                  <item value="&quot;AzureMonitor&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="emissionType" arg="$parameters.properties.collectorPolicies[].properties.emissionPolicies[].emissionType">
                            <enum>
                              <item value="&quot;IPFIX&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="ingestionPolicy" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy">
                        <prop type="array<object>" name="ingestionSources" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources">
                          <item type="object">
                            <prop type="string" name="resourceId" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].resourceId"/>
                            <prop type="string" name="sourceType" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionSources[].sourceType">
                              <enum>
                                <item value="&quot;Resource&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ingestionType" arg="$parameters.properties.collectorPolicies[].properties.ingestionPolicy.ingestionType">
                          <enum>
                            <item value="&quot;IPFIX&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="tags" arg="$parameters.properties.collectorPolicies[].tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AzureTrafficCollectors_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}">
          <request method="put">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AzureTrafficCollector_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
