{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}", "version": "2025-03-01-preview", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wMy0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "neon postgres organization project", "commands": [{"name": "show", "version": "2025-03-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}", "version": "2025-03-01-preview", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wMy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "idPart": "name", "help": {"short": "Name of the Neon Organizations resource"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["n", "name", "project-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the Project"}, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Projects_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "ModelsAttributes_read"}}, {"type": "object", "name": "branch", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeondatabaseproperties_read"}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeonroleproperties_read"}}]}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "array<@ModelsNeondatabaseproperties_read>", "name": "databases", "item": {"type": "@ModelsNeondatabaseproperties_read"}}, {"type": "object", "name": "defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointproperties_read>", "name": "endpoints", "item": {"type": "@ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention"}, {"type": "integer32", "name": "pgVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "regionId"}, {"type": "array<@ModelsNeonroleproperties_read>", "name": "roles", "item": {"type": "@ModelsNeonroleproperties_read"}}, {"type": "integer64", "name": "storage"}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"readOnly": true, "type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2025-03-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}", "version": "2025-03-01-preview", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wMy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "idPart": "name", "help": {"short": "Name of the Neon Organizations resource"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["n", "name", "project-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the Project"}, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Projects_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"readOnly": true, "type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2025-03-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}", "version": "2025-03-01-preview", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wMy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "idPart": "name", "help": {"short": "Name of the Neon Organizations resource"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["n", "name", "project-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the Project"}, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$resource.properties.attributes", "options": ["attributes"], "group": "Properties", "help": {"short": "Additional attributes for the entity"}, "item": {"type": "object", "args": [{"type": "string", "var": "@ModelsAttributesCreateOrUpdate_create.name", "options": ["name"], "required": true, "help": {"short": "Name of the attribute"}}, {"type": "string", "var": "@ModelsAttributesCreateOrUpdate_create.value", "options": ["value"], "required": true, "help": {"short": "Value of the attribute"}}], "cls": "ModelsAttributesCreateOrUpdate_create"}}, {"type": "object", "var": "$resource.properties.branch", "options": ["branch"], "group": "Properties", "help": {"short": "The Branch properties of the project. This is optional"}, "args": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "var": "$resource.properties.branch.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "var": "$resource.properties.branch.databaseName", "options": ["database-name"], "help": {"short": "Database name associated with the branch"}}, {"type": "array<object>", "var": "$resource.properties.branch.databases", "options": ["databases"], "help": {"short": "Neon Databases associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this database belongs to"}}, {"type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.ownerName", "options": ["owner-name"], "help": {"short": "The name of the role that owns the database"}}], "cls": "ModelsNeondatabasepropertiesCreateOrUpdate_create"}}, {"type": "array<object>", "var": "$resource.properties.branch.endpoints", "options": ["endpoints"], "help": {"short": "Endpoints associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "var": "@ModelsEndpointpropertiesCreateOrUpdate_create.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_create.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this endpoint belongs to"}}, {"type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_create.endpointType", "options": ["endpoint-type"], "help": {"short": "The type of the endpoint"}, "enum": {"items": [{"name": "read_only", "value": "read_only"}, {"name": "read_write", "value": "read_write"}]}}, {"type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_create.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_create.projectId", "options": ["project-id"], "help": {"short": "The ID of the project this endpoint belongs to"}}], "cls": "ModelsEndpointpropertiesCreateOrUpdate_create"}}, {"type": "string", "var": "$resource.properties.branch.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$resource.properties.branch.parentId", "options": ["parent-id"], "help": {"short": "The ID of the parent branch"}, "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "var": "$resource.properties.branch.projectId", "options": ["project-id"], "help": {"short": "The ID of the project this branch belongs to"}}, {"type": "string", "var": "$resource.properties.branch.roleName", "options": ["role-name"], "help": {"short": "Role name associated with the branch"}}, {"type": "array<object>", "var": "$resource.properties.branch.roles", "options": ["roles"], "help": {"short": "Roles associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_create.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_create.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this role belongs to"}}, {"type": "string", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_create.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_create.isSuperUser", "options": ["is-super-user"], "help": {"short": "Indicates whether the role has superuser privileges"}}, {"type": "array<string>", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_create.permissions", "options": ["permissions"], "help": {"short": "Permissions assigned to the role"}, "item": {"type": "string"}}], "cls": "ModelsNeonrolepropertiesCreateOrUpdate_create"}}]}, {"type": "array<@ModelsNeondatabasepropertiesCreateOrUpdate_create>", "var": "$resource.properties.databases", "options": ["databases"], "group": "Properties", "help": {"short": "Neon Databases associated with the project"}, "item": {"type": "@ModelsNeondatabasepropertiesCreateOrUpdate_create"}}, {"type": "object", "var": "$resource.properties.defaultEndpointSettings", "options": ["default-endpoint-settings"], "group": "Properties", "help": {"short": "Default endpoint settings for the project."}, "args": [{"type": "float32", "var": "$resource.properties.defaultEndpointSettings.autoscalingLimitMaxCu", "options": ["autoscaling-limit-max-cu"], "required": true, "help": {"short": "Maximum compute units for autoscaling."}}, {"type": "float32", "var": "$resource.properties.defaultEndpointSettings.autoscalingLimitMinCu", "options": ["autoscaling-limit-min-cu"], "required": true, "help": {"short": "Minimum compute units for autoscaling."}}]}, {"type": "array<@ModelsEndpointpropertiesCreateOrUpdate_create>", "var": "$resource.properties.endpoints", "options": ["endpoints"], "group": "Properties", "help": {"short": "Endpoints associated with the project"}, "item": {"type": "@ModelsEndpointpropertiesCreateOrUpdate_create"}}, {"type": "string", "var": "$resource.properties.entityName", "options": ["entity-name"], "group": "Properties", "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "var": "$resource.properties.historyRetention", "options": ["history-retention"], "group": "Properties", "help": {"short": "The retention period for project history in seconds."}}, {"type": "integer32", "var": "$resource.properties.pgVersion", "options": ["pg-version"], "group": "Properties", "help": {"short": "Postgres version for the project"}}, {"type": "string", "var": "$resource.properties.regionId", "options": ["region-id"], "group": "Properties", "help": {"short": "Region where the project is created"}}, {"type": "array<@ModelsNeonrolepropertiesCreateOrUpdate_create>", "var": "$resource.properties.roles", "options": ["roles"], "group": "Properties", "help": {"short": "Roles associated with the project"}, "item": {"type": "@ModelsNeonrolepropertiesCreateOrUpdate_create"}}, {"type": "integer64", "var": "$resource.properties.storage", "options": ["storage"], "group": "Properties", "help": {"short": "Data Storage bytes per hour for the project"}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Projects_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "arg": "$resource.properties.attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "@ModelsAttributesCreateOrUpdate_create.name", "required": true}, {"type": "string", "name": "value", "arg": "@ModelsAttributesCreateOrUpdate_create.value", "required": true}], "cls": "ModelsAttributesCreateOrUpdate_create"}}, {"type": "object", "name": "branch", "arg": "$resource.properties.branch", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "name": "attributes", "arg": "$resource.properties.branch.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "name": "databaseName", "arg": "$resource.properties.branch.databaseName"}, {"type": "array<object>", "name": "databases", "arg": "$resource.properties.branch.databases", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "name": "attributes", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "name": "branchId", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.branchId"}, {"type": "string", "name": "entityName", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_create.ownerName"}], "cls": "ModelsNeondatabasepropertiesCreateOrUpdate_create"}}, {"type": "array<object>", "name": "endpoints", "arg": "$resource.properties.branch.endpoints", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "name": "attributes", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_create.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "name": "branchId", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_create.branchId"}, {"type": "string", "name": "endpointType", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_create.endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"type": "string", "name": "entityName", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_create.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_create.projectId"}], "cls": "ModelsEndpointpropertiesCreateOrUpdate_create"}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.branch.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "arg": "$resource.properties.branch.parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.branch.projectId"}, {"type": "string", "name": "roleName", "arg": "$resource.properties.branch.roleName"}, {"type": "array<object>", "name": "roles", "arg": "$resource.properties.branch.roles", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_create>", "name": "attributes", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_create.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_create"}}, {"type": "string", "name": "branchId", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_create.branchId"}, {"type": "string", "name": "entityName", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_create.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_create.isSuperUser"}, {"type": "array<string>", "name": "permissions", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_create.permissions", "item": {"type": "string"}}], "cls": "ModelsNeonrolepropertiesCreateOrUpdate_create"}}]}, {"type": "array<@ModelsNeondatabasepropertiesCreateOrUpdate_create>", "name": "databases", "arg": "$resource.properties.databases", "item": {"type": "@ModelsNeondatabasepropertiesCreateOrUpdate_create"}}, {"type": "object", "name": "defaultEndpointSettings", "arg": "$resource.properties.defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "arg": "$resource.properties.defaultEndpointSettings.autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "arg": "$resource.properties.defaultEndpointSettings.autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointpropertiesCreateOrUpdate_create>", "name": "endpoints", "arg": "$resource.properties.endpoints", "item": {"type": "@ModelsEndpointpropertiesCreateOrUpdate_create"}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention", "arg": "$resource.properties.historyRetention"}, {"type": "integer32", "name": "pgVersion", "arg": "$resource.properties.pgVersion"}, {"type": "string", "name": "regionId", "arg": "$resource.properties.regionId"}, {"type": "array<@ModelsNeonrolepropertiesCreateOrUpdate_create>", "name": "roles", "arg": "$resource.properties.roles", "item": {"type": "@ModelsNeonrolepropertiesCreateOrUpdate_create"}}, {"type": "integer64", "name": "storage", "arg": "$resource.properties.storage"}]}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "ModelsAttributes_read"}}, {"type": "object", "name": "branch", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeondatabaseproperties_read"}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeonroleproperties_read"}}]}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "array<@ModelsNeondatabaseproperties_read>", "name": "databases", "item": {"type": "@ModelsNeondatabaseproperties_read"}}, {"type": "object", "name": "defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointproperties_read>", "name": "endpoints", "item": {"type": "@ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention"}, {"type": "integer32", "name": "pgVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "regionId"}, {"type": "array<@ModelsNeonroleproperties_read>", "name": "roles", "item": {"type": "@ModelsNeonroleproperties_read"}}, {"type": "integer64", "name": "storage"}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"readOnly": true, "type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2025-03-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}", "version": "2025-03-01-preview", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wMy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "idPart": "name", "help": {"short": "Name of the Neon Organizations resource"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["n", "name", "project-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the Project"}, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$resource.properties.attributes", "options": ["attributes"], "group": "Properties", "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "@ModelsAttributesCreateOrUpdate_update.name", "options": ["name"], "help": {"short": "Name of the attribute"}}, {"type": "string", "var": "@ModelsAttributesCreateOrUpdate_update.value", "options": ["value"], "help": {"short": "Value of the attribute"}}], "cls": "ModelsAttributesCreateOrUpdate_update"}}, {"nullable": true, "type": "object", "var": "$resource.properties.branch", "options": ["branch"], "group": "Properties", "help": {"short": "The Branch properties of the project. This is optional"}, "args": [{"nullable": true, "type": "array<@ModelsAttributesCreateOrUpdate_update>", "var": "$resource.properties.branch.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@ModelsAttributesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.branch.databaseName", "options": ["database-name"], "help": {"short": "Database name associated with the branch"}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.branch.databases", "options": ["databases"], "help": {"short": "Neon Databases associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@ModelsAttributesCreateOrUpdate_update>", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@ModelsAttributesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this database belongs to"}}, {"nullable": true, "type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.ownerName", "options": ["owner-name"], "help": {"short": "The name of the role that owns the database"}}], "cls": "ModelsNeondatabasepropertiesCreateOrUpdate_update"}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.branch.endpoints", "options": ["endpoints"], "help": {"short": "Endpoints associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@ModelsAttributesCreateOrUpdate_update>", "var": "@ModelsEndpointpropertiesCreateOrUpdate_update.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@ModelsAttributesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_update.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this endpoint belongs to"}}, {"nullable": true, "type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_update.endpointType", "options": ["endpoint-type"], "help": {"short": "The type of the endpoint"}, "enum": {"items": [{"name": "read_only", "value": "read_only"}, {"name": "read_write", "value": "read_write"}]}}, {"nullable": true, "type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_update.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "@ModelsEndpointpropertiesCreateOrUpdate_update.projectId", "options": ["project-id"], "help": {"short": "The ID of the project this endpoint belongs to"}}], "cls": "ModelsEndpointpropertiesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.branch.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.branch.parentId", "options": ["parent-id"], "help": {"short": "The ID of the parent branch"}, "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.branch.projectId", "options": ["project-id"], "help": {"short": "The ID of the project this branch belongs to"}}, {"nullable": true, "type": "string", "var": "$resource.properties.branch.roleName", "options": ["role-name"], "help": {"short": "Role name associated with the branch"}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.branch.roles", "options": ["roles"], "help": {"short": "Roles associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@ModelsAttributesCreateOrUpdate_update>", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_update.attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@ModelsAttributesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_update.branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this role belongs to"}}, {"nullable": true, "type": "string", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_update.entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "boolean", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_update.isSuperUser", "options": ["is-super-user"], "help": {"short": "Indicates whether the role has superuser privileges"}}, {"nullable": true, "type": "array<string>", "var": "@ModelsNeonrolepropertiesCreateOrUpdate_update.permissions", "options": ["permissions"], "help": {"short": "Permissions assigned to the role"}, "item": {"nullable": true, "type": "string"}}], "cls": "ModelsNeonrolepropertiesCreateOrUpdate_update"}}]}, {"nullable": true, "type": "array<@ModelsNeondatabasepropertiesCreateOrUpdate_update>", "var": "$resource.properties.databases", "options": ["databases"], "group": "Properties", "help": {"short": "Neon Databases associated with the project"}, "item": {"nullable": true, "type": "@ModelsNeondatabasepropertiesCreateOrUpdate_update"}}, {"nullable": true, "type": "object", "var": "$resource.properties.defaultEndpointSettings", "options": ["default-endpoint-settings"], "group": "Properties", "help": {"short": "Default endpoint settings for the project."}, "args": [{"type": "float32", "var": "$resource.properties.defaultEndpointSettings.autoscalingLimitMaxCu", "options": ["autoscaling-limit-max-cu"], "help": {"short": "Maximum compute units for autoscaling."}}, {"type": "float32", "var": "$resource.properties.defaultEndpointSettings.autoscalingLimitMinCu", "options": ["autoscaling-limit-min-cu"], "help": {"short": "Minimum compute units for autoscaling."}}]}, {"nullable": true, "type": "array<@ModelsEndpointpropertiesCreateOrUpdate_update>", "var": "$resource.properties.endpoints", "options": ["endpoints"], "group": "Properties", "help": {"short": "Endpoints associated with the project"}, "item": {"nullable": true, "type": "@ModelsEndpointpropertiesCreateOrUpdate_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.entityName", "options": ["entity-name"], "group": "Properties", "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "integer32", "var": "$resource.properties.historyRetention", "options": ["history-retention"], "group": "Properties", "help": {"short": "The retention period for project history in seconds."}}, {"nullable": true, "type": "integer32", "var": "$resource.properties.pgVersion", "options": ["pg-version"], "group": "Properties", "help": {"short": "Postgres version for the project"}}, {"nullable": true, "type": "string", "var": "$resource.properties.regionId", "options": ["region-id"], "group": "Properties", "help": {"short": "Region where the project is created"}}, {"nullable": true, "type": "array<@ModelsNeonrolepropertiesCreateOrUpdate_update>", "var": "$resource.properties.roles", "options": ["roles"], "group": "Properties", "help": {"short": "Roles associated with the project"}, "item": {"nullable": true, "type": "@ModelsNeonrolepropertiesCreateOrUpdate_update"}}, {"nullable": true, "type": "integer64", "var": "$resource.properties.storage", "options": ["storage"], "group": "Properties", "help": {"short": "Data Storage bytes per hour for the project"}}]}], "operations": [{"operationId": "Projects_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "ModelsAttributes_read"}}, {"type": "object", "name": "branch", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeondatabaseproperties_read"}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "ModelsNeonroleproperties_read"}}]}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "array<@ModelsNeondatabaseproperties_read>", "name": "databases", "item": {"type": "@ModelsNeondatabaseproperties_read"}}, {"type": "object", "name": "defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointproperties_read>", "name": "endpoints", "item": {"type": "@ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention"}, {"type": "integer32", "name": "pgVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "regionId"}, {"type": "array<@ModelsNeonroleproperties_read>", "name": "roles", "item": {"type": "@ModelsNeonroleproperties_read"}}, {"type": "integer64", "name": "storage"}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"readOnly": true, "type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "arg": "$resource.properties.attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "@ModelsAttributesCreateOrUpdate_update.name", "required": true}, {"type": "string", "name": "value", "arg": "@ModelsAttributesCreateOrUpdate_update.value", "required": true}], "cls": "ModelsAttributesCreateOrUpdate_update"}}, {"type": "object", "name": "branch", "arg": "$resource.properties.branch", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_update>", "name": "attributes", "arg": "$resource.properties.branch.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_update"}}, {"type": "string", "name": "databaseName", "arg": "$resource.properties.branch.databaseName"}, {"type": "array<object>", "name": "databases", "arg": "$resource.properties.branch.databases", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_update>", "name": "attributes", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_update"}}, {"type": "string", "name": "branchId", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.branchId"}, {"type": "string", "name": "entityName", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName", "arg": "@ModelsNeondatabasepropertiesCreateOrUpdate_update.ownerName"}], "cls": "ModelsNeondatabasepropertiesCreateOrUpdate_update"}}, {"type": "array<object>", "name": "endpoints", "arg": "$resource.properties.branch.endpoints", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_update>", "name": "attributes", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_update.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_update"}}, {"type": "string", "name": "branchId", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_update.branchId"}, {"type": "string", "name": "endpointType", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_update.endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"type": "string", "name": "entityName", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_update.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId", "arg": "@ModelsEndpointpropertiesCreateOrUpdate_update.projectId"}], "cls": "ModelsEndpointpropertiesCreateOrUpdate_update"}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.branch.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "arg": "$resource.properties.branch.parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.branch.projectId"}, {"type": "string", "name": "roleName", "arg": "$resource.properties.branch.roleName"}, {"type": "array<object>", "name": "roles", "arg": "$resource.properties.branch.roles", "item": {"type": "object", "props": [{"type": "array<@ModelsAttributesCreateOrUpdate_update>", "name": "attributes", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_update.attributes", "item": {"type": "@ModelsAttributesCreateOrUpdate_update"}}, {"type": "string", "name": "branchId", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_update.branchId"}, {"type": "string", "name": "entityName", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_update.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_update.isSuperUser"}, {"type": "array<string>", "name": "permissions", "arg": "@ModelsNeonrolepropertiesCreateOrUpdate_update.permissions", "item": {"type": "string"}}], "cls": "ModelsNeonrolepropertiesCreateOrUpdate_update"}}]}, {"type": "array<@ModelsNeondatabasepropertiesCreateOrUpdate_update>", "name": "databases", "arg": "$resource.properties.databases", "item": {"type": "@ModelsNeondatabasepropertiesCreateOrUpdate_update"}}, {"type": "object", "name": "defaultEndpointSettings", "arg": "$resource.properties.defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "arg": "$resource.properties.defaultEndpointSettings.autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "arg": "$resource.properties.defaultEndpointSettings.autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointpropertiesCreateOrUpdate_update>", "name": "endpoints", "arg": "$resource.properties.endpoints", "item": {"type": "@ModelsEndpointpropertiesCreateOrUpdate_update"}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention", "arg": "$resource.properties.historyRetention"}, {"type": "integer32", "name": "pgVersion", "arg": "$resource.properties.pgVersion"}, {"type": "string", "name": "regionId", "arg": "$resource.properties.regionId"}, {"type": "array<@ModelsNeonrolepropertiesCreateOrUpdate_update>", "name": "roles", "arg": "$resource.properties.roles", "item": {"type": "@ModelsNeonrolepropertiesCreateOrUpdate_update"}}, {"type": "integer64", "name": "storage", "arg": "$resource.properties.storage"}]}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Projects_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,24}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"type": "object", "name": "branch", "props": [{"type": "array<@ModelsAttributes_read>", "name": "attributes", "item": {"type": "@ModelsAttributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<@ModelsNeondatabaseproperties_read>", "name": "databases", "item": {"type": "@ModelsNeondatabaseproperties_read"}}, {"type": "array<@ModelsEndpointproperties_read>", "name": "endpoints", "item": {"type": "@ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<@ModelsNeonroleproperties_read>", "name": "roles", "item": {"type": "@ModelsNeonroleproperties_read"}}]}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "array<@ModelsNeondatabaseproperties_read>", "name": "databases", "item": {"type": "@ModelsNeondatabaseproperties_read"}}, {"type": "object", "name": "defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "required": true}]}, {"type": "array<@ModelsEndpointproperties_read>", "name": "endpoints", "item": {"type": "@ModelsEndpointproperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention"}, {"type": "integer32", "name": "pgVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "regionId"}, {"type": "array<@ModelsNeonroleproperties_read>", "name": "roles", "item": {"type": "@ModelsNeonroleproperties_read"}}, {"type": "integer64", "name": "storage"}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"readOnly": true, "type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}