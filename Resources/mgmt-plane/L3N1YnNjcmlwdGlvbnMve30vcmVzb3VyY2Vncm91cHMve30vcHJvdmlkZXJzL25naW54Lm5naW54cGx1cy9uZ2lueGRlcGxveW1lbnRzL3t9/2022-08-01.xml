<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyMi0wOC0wMQ=="/>
  <commandGroup name="nginx deployment">
    <command name="create" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deploymentName" options="deployment-name name n" required="True" idPart="name">
          <help short="The name of the targeted NGINX deployment" lines="It should contain only alphanumeric characters, up to 30 characters long; and cannot begin or end with a hyphen."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.identity" options="identity" group="Body">
          <arg type="string" var="$body.identity.type" options="type">
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities">
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$body.location" options="location l" group="Body"/>
        <arg type="object" var="$body.sku" options="sku" group="Body">
          <help short="The billing information for the resource" lines="https://docs.nginx.com/nginx-for-azure/billing/overview/ information name=XXX Usage: --sku More on"/>
          <arg type="string" var="$body.sku.name" options="name" required="True">
            <help short="Name of the SKU."/>
          </arg>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Tags for deployment" lines="Usage: --tags tag1=&quot;value1&quot; tag2=&quot;value2&quot;"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$body.properties.enableDiagnosticsSupport" options="enable-diagnostics" group="Properties">
          <help short="Boolean to enable/disable diagnostics support"/>
        </arg>
        <arg type="object" var="$body.properties.logging" options="logging" group="Properties">
          <arg type="object" var="$body.properties.logging.storageAccount" options="storage-account">
            <arg type="string" var="$body.properties.logging.storageAccount.accountName" options="account-name"/>
            <arg type="string" var="$body.properties.logging.storageAccount.containerName" options="container-name"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.managedResourceGroup" options="managed-resource-group" hide="True" group="Properties">
          <help short="The managed resource group to deploy VNet injection related network resources."/>
        </arg>
        <arg type="object" var="$body.properties.networkProfile" options="network-profile" group="Properties">
          <help short="IP address and VNet + subnet information" lines="network-interface-configuration=&quot;<subnet front-end-ip-configuration=&quot;<private network-interface-configuration: NGINX.NGINXPLUS/nginxDeployments front-end-ip-configuration: --network-profile information>&quot; information>&quot; information, addresses. delegated network. address private virtual Usage: public public subnet within subnet should your This or IP IP or IP be to A"/>
          <arg type="object" var="$body.properties.networkProfile.frontEndIPConfiguration" options="front-end-ip-configuration">
            <arg type="array<object>" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses" options="private-ip-addresses">
              <item type="object">
                <arg type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress" options="private-ip-address"/>
                <arg type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod" options="private-ip-allocation-method">
                  <enum>
                    <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                    <item name="Static" value="&quot;Static&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId" options="subnet-id"/>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses" options="public-ip-addresses">
              <item type="object">
                <arg type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id" options="id"/>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$body.properties.networkProfile.networkInterfaceConfiguration" options="network-interface-configuration">
            <arg type="string" var="$body.properties.networkProfile.networkInterfaceConfiguration.subnetId" options="subnet-id"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="State of deployment"/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Deployments_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}">
          <request method="put">
            <path>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$body.identity">
                    <prop type="string" name="type" arg="$body.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location"/>
                  <prop type="object" name="properties">
                    <prop type="boolean" name="enableDiagnosticsSupport" arg="$body.properties.enableDiagnosticsSupport"/>
                    <prop type="object" name="logging" arg="$body.properties.logging">
                      <prop type="object" name="storageAccount" arg="$body.properties.logging.storageAccount">
                        <prop type="string" name="accountName" arg="$body.properties.logging.storageAccount.accountName"/>
                        <prop type="string" name="containerName" arg="$body.properties.logging.storageAccount.containerName"/>
                      </prop>
                    </prop>
                    <prop type="string" name="managedResourceGroup" arg="$body.properties.managedResourceGroup"/>
                    <prop type="object" name="networkProfile" arg="$body.properties.networkProfile">
                      <prop type="object" name="frontEndIPConfiguration" arg="$body.properties.networkProfile.frontEndIPConfiguration">
                        <prop type="array<object>" name="privateIPAddresses" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses">
                          <item type="object">
                            <prop type="string" name="privateIPAddress" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="subnetId" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="publicIPAddresses" arg="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses">
                          <item type="object">
                            <prop type="string" name="id" arg="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="networkInterfaceConfiguration" arg="$body.properties.networkProfile.networkInterfaceConfiguration">
                        <prop type="string" name="subnetId" arg="$body.properties.networkProfile.networkInterfaceConfiguration.subnetId"/>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$body.sku">
                    <prop type="string" name="name" arg="$body.sku.name" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="boolean" name="enableDiagnosticsSupport"/>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop type="object" name="logging">
                      <prop type="object" name="storageAccount">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="containerName"/>
                      </prop>
                    </prop>
                    <prop type="string" name="managedResourceGroup"/>
                    <prop type="object" name="networkProfile">
                      <prop type="object" name="frontEndIPConfiguration">
                        <prop type="array<object>" name="privateIPAddresses">
                          <item type="object">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="subnetId"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="publicIPAddresses">
                          <item type="object">
                            <prop type="string" name="id"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="networkInterfaceConfiguration">
                        <prop type="string" name="subnetId"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="nginxVersion"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="show" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deploymentName" options="deployment-name name n" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Deployments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}">
          <request method="get">
            <path>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="boolean" name="enableDiagnosticsSupport"/>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop type="object" name="logging">
                      <prop type="object" name="storageAccount">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="containerName"/>
                      </prop>
                    </prop>
                    <prop type="string" name="managedResourceGroup"/>
                    <prop type="object" name="networkProfile">
                      <prop type="object" name="frontEndIPConfiguration">
                        <prop type="array<object>" name="privateIPAddresses">
                          <item type="object">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="subnetId"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="publicIPAddresses">
                          <item type="object">
                            <prop type="string" name="id"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="networkInterfaceConfiguration">
                        <prop type="string" name="subnetId"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="nginxVersion"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deploymentName" options="deployment-name name n" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.identity" options="identity" group="Body">
          <arg nullable="True" type="string" var="$body.identity.type" options="type">
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities"/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$body.location" options="location l" group="Body"/>
        <arg nullable="True" type="object" var="$body.sku" options="sku" group="Body">
          <arg type="string" var="$body.sku.name" options="name">
            <help short="Name of the SKU."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$body.properties.enableDiagnosticsSupport" options="enable-diagnostics" group="Properties">
          <help short="Boolean to enable/disable diagnostics support"/>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.logging" options="logging" group="Properties">
          <arg nullable="True" type="object" var="$body.properties.logging.storageAccount" options="storage-account">
            <arg nullable="True" type="string" var="$body.properties.logging.storageAccount.accountName" options="account-name"/>
            <arg nullable="True" type="string" var="$body.properties.logging.storageAccount.containerName" options="container-name"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.managedResourceGroup" options="managed-resource-group" hide="True" group="Properties">
          <help short="The managed resource group to deploy VNet injection related network resources."/>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.networkProfile" options="network-profile" group="Properties">
          <arg nullable="True" type="object" var="$body.properties.networkProfile.frontEndIPConfiguration" options="front-end-ip-configuration">
            <arg nullable="True" type="array<object>" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses" options="private-ip-addresses">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress" options="private-ip-address"/>
                <arg nullable="True" type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod" options="private-ip-allocation-method">
                  <enum>
                    <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                    <item name="Static" value="&quot;Static&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId" options="subnet-id"/>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses" options="public-ip-addresses">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id" options="id"/>
              </item>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$body.properties.networkProfile.networkInterfaceConfiguration" options="network-interface-configuration">
            <arg nullable="True" type="string" var="$body.properties.networkProfile.networkInterfaceConfiguration.subnetId" options="subnet-id"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="State of deployment"/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Deployments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}">
          <request method="get">
            <path>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NginxDeployment_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="boolean" name="enableDiagnosticsSupport"/>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop type="object" name="logging">
                      <prop type="object" name="storageAccount">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="containerName"/>
                      </prop>
                    </prop>
                    <prop type="string" name="managedResourceGroup"/>
                    <prop type="object" name="networkProfile">
                      <prop type="object" name="frontEndIPConfiguration">
                        <prop type="array<object>" name="privateIPAddresses">
                          <item type="object">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="subnetId"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="publicIPAddresses">
                          <item type="object">
                            <prop type="string" name="id"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="networkInterfaceConfiguration">
                        <prop type="string" name="subnetId"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="nginxVersion"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$body.identity">
                <prop type="string" name="type" arg="$body.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$body.location"/>
              <prop type="object" name="properties">
                <prop type="boolean" name="enableDiagnosticsSupport" arg="$body.properties.enableDiagnosticsSupport"/>
                <prop type="object" name="logging" arg="$body.properties.logging">
                  <prop type="object" name="storageAccount" arg="$body.properties.logging.storageAccount">
                    <prop type="string" name="accountName" arg="$body.properties.logging.storageAccount.accountName"/>
                    <prop type="string" name="containerName" arg="$body.properties.logging.storageAccount.containerName"/>
                  </prop>
                </prop>
                <prop type="string" name="managedResourceGroup" arg="$body.properties.managedResourceGroup"/>
                <prop type="object" name="networkProfile" arg="$body.properties.networkProfile">
                  <prop type="object" name="frontEndIPConfiguration" arg="$body.properties.networkProfile.frontEndIPConfiguration">
                    <prop type="array<object>" name="privateIPAddresses" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses">
                      <item type="object">
                        <prop type="string" name="privateIPAddress" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress"/>
                        <prop type="string" name="privateIPAllocationMethod" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subnetId" arg="$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="publicIPAddresses" arg="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses">
                      <item type="object">
                        <prop type="string" name="id" arg="$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="networkInterfaceConfiguration" arg="$body.properties.networkProfile.networkInterfaceConfiguration">
                    <prop type="string" name="subnetId" arg="$body.properties.networkProfile.networkInterfaceConfiguration.subnetId"/>
                  </prop>
                </prop>
                <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                  <enum>
                    <item value="&quot;Accepted&quot;"/>
                    <item value="&quot;Canceled&quot;"/>
                    <item value="&quot;Creating&quot;"/>
                    <item value="&quot;Deleted&quot;"/>
                    <item value="&quot;Deleting&quot;"/>
                    <item value="&quot;Failed&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;Succeeded&quot;"/>
                    <item value="&quot;Updating&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="sku" arg="$body.sku">
                <prop type="string" name="name" arg="$body.sku.name" required="True"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Deployments_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}">
          <request method="put">
            <path>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NginxDeployment_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deploymentName" options="deployment-name name n" required="True" idPart="name">
          <help short="The name of targeted NGINX deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Deployments_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}">
          <request method="delete">
            <path>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
  </commandGroup>
</CodeGen>
