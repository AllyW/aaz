{
    "plane": "mgmt-plane",
    "resources": [
        {
            "id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/certificates/{}",
            "version": "2022-08-01",
            "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NlcnRpZmljYXRlcy97Y2VydGlmaWNhdGVOYW1lfQ==/V/MjAyMi0wOC0wMQ=="
        }
    ],
    "commandGroups": [
        {
            "name": "nginx deployment certificate",
            "commands": [
                {
                    "name": "show",
                    "version": "2022-08-01",
                    "resources": [
                        {
                            "id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/certificates/{}",
                            "version": "2022-08-01",
                            "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NlcnRpZmljYXRlcy97Y2VydGlmaWNhdGVOYW1lfQ==/V/MjAyMi0wOC0wMQ=="
                        }
                    ],
                    "argGroups": [
                        {
                            "name": "",
                            "args": [
                                {
                                    "type": "string",
                                    "var": "$Path.certificateName",
                                    "options": [
                                        "n",
                                        "name",
                                        "certificate-name"
                                    ],
                                    "required": true,
                                    "idPart": "child_name_1",
                                    "help": {
                                        "short": "The name of certificate"
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$Path.deploymentName",
                                    "options": [
                                        "deployment-name"
                                    ],
                                    "required": true,
                                    "idPart": "name",
                                    "help": {
                                        "short": "The name of targeted Nginx deployment"
                                    }
                                },
                                {
                                    "type": "ResourceGroupName",
                                    "var": "$Path.resourceGroupName",
                                    "options": [
                                        "g",
                                        "resource-group"
                                    ],
                                    "required": true,
                                    "idPart": "resource_group"
                                },
                                {
                                    "type": "SubscriptionId",
                                    "var": "$Path.subscriptionId",
                                    "options": [
                                        "subscription"
                                    ],
                                    "required": true,
                                    "idPart": "subscription"
                                }
                            ]
                        }
                    ],
                    "operations": [
                        {
                            "operationId": "Certificates_Get",
                            "http": {
                                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}",
                                "request": {
                                    "method": "get",
                                    "path": {
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "certificateName",
                                                "arg": "$Path.certificateName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "deploymentName",
                                                "arg": "$Path.deploymentName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "resourceGroupName",
                                                "arg": "$Path.resourceGroupName",
                                                "required": true,
                                                "format": {
                                                    "maxLength": 90,
                                                    "minLength": 1
                                                }
                                            },
                                            {
                                                "type": "string",
                                                "name": "subscriptionId",
                                                "arg": "$Path.subscriptionId",
                                                "required": true,
                                                "format": {
                                                    "minLength": 1
                                                }
                                            }
                                        ]
                                    }
                                },
                                "responses": [
                                    {
                                        "statusCode": [
                                            200
                                        ],
                                        "body": {
                                            "json": {
                                                "var": "$Instance",
                                                "schema": {
                                                    "type": "object",
                                                    "props": [
                                                        {
                                                            "readOnly": true,
                                                            "type": "ResourceId",
                                                            "name": "id",
                                                            "format": {
                                                                "template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/certificates/{}"
                                                            }
                                                        },
                                                        {
                                                            "type": "ResourceLocation",
                                                            "name": "location"
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "name"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "properties",
                                                            "props": [
                                                                {
                                                                    "type": "string",
                                                                    "name": "certificateVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVaultSecretId"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "provisioningState",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Accepted"
                                                                            },
                                                                            {
                                                                                "value": "Canceled"
                                                                            },
                                                                            {
                                                                                "value": "Creating"
                                                                            },
                                                                            {
                                                                                "value": "Deleted"
                                                                            },
                                                                            {
                                                                                "value": "Deleting"
                                                                            },
                                                                            {
                                                                                "value": "Failed"
                                                                            },
                                                                            {
                                                                                "value": "NotSpecified"
                                                                            },
                                                                            {
                                                                                "value": "Succeeded"
                                                                            },
                                                                            {
                                                                                "value": "Updating"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "object",
                                                            "name": "systemData",
                                                            "props": [
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "createdAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "lastModifiedAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "tags",
                                                            "additionalProps": {
                                                                "item": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "type"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "isError": true,
                                        "body": {
                                            "json": {
                                                "schema": {
                                                    "type": "@ODataV4Format"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": [
                        {
                            "type": "object",
                            "ref": "$Instance",
                            "clientFlatten": true
                        }
                    ]
                },
                {
                    "name": "create",
                    "version": "2022-08-01",
                    "resources": [
                        {
                            "id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/certificates/{}",
                            "version": "2022-08-01",
                            "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NlcnRpZmljYXRlcy97Y2VydGlmaWNhdGVOYW1lfQ==/V/MjAyMi0wOC0wMQ=="
                        }
                    ],
                    "argGroups": [
                        {
                            "name": "",
                            "args": [
                                {
                                    "type": "string",
                                    "var": "$Path.certificateName",
                                    "options": [
                                        "n",
                                        "name",
                                        "certificate-name"
                                    ],
                                    "required": true,
                                    "idPart": "child_name_1",
                                    "help": {
                                        "short": "The name of certificate"
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$Path.deploymentName",
                                    "options": [
                                        "deployment-name"
                                    ],
                                    "required": true,
                                    "idPart": "name",
                                    "help": {
                                        "short": "The name of targeted Nginx deployment"
                                    }
                                },
                                {
                                    "type": "ResourceGroupName",
                                    "var": "$Path.resourceGroupName",
                                    "options": [
                                        "g",
                                        "resource-group"
                                    ],
                                    "required": true,
                                    "idPart": "resource_group"
                                },
                                {
                                    "type": "SubscriptionId",
                                    "var": "$Path.subscriptionId",
                                    "options": [
                                        "subscription"
                                    ],
                                    "required": true,
                                    "idPart": "subscription"
                                }
                            ]
                        },
                        {
                            "name": "Body",
                            "args": [
                                {
                                    "type": "ResourceLocation",
                                    "var": "$body.location",
                                    "options": [
                                        "l",
                                        "location"
                                    ],
                                    "group": "Body"
                                },
                                {
                                    "type": "object",
                                    "var": "$body.tags",
                                    "options": [
                                        "tags"
                                    ],
                                    "group": "Body",
                                    "additionalProps": {
                                        "item": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Properties",
                            "args": [
                                {
                                    "type": "string",
                                    "var": "$body.properties.certificateVirtualPath",
                                    "options": [
                                        "certificate-path"
                                    ],
                                    "group": "Properties",
                                    "help": {
                                        "short": "Certificate path in Nginx configuration structure",
                                        "lines": [
                                            "This path must match one or more ssl_certificate directive file argument in your Nginx configuration. This path must be unique between certificates within the same deployment"
                                        ]
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$body.properties.keyVaultSecretId",
                                    "options": [
                                        "key-vault-secret-id"
                                    ],
                                    "group": "Properties",
                                    "help": {
                                        "short": "The secret ID for your certificate from Azure Key Vault"
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$body.properties.keyVirtualPath",
                                    "options": [
                                        "key-path"
                                    ],
                                    "group": "Properties",
                                    "help": {
                                        "short": "Key path in Nginx configuration structure",
                                        "lines": [
                                            "This path must match one or more ssl_certificate_key directive file argument in your Nginx configuration. This path must be unique between certificates within the same deployment"
                                        ]
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$body.properties.provisioningState",
                                    "options": [
                                        "provisioning-state"
                                    ],
                                    "hide": true,
                                    "group": "Properties",
                                    "help": {
                                        "short": "State of certificate"
                                    },
                                    "enum": {
                                        "items": [
                                            {
                                                "name": "Accepted",
                                                "value": "Accepted"
                                            },
                                            {
                                                "name": "Canceled",
                                                "value": "Canceled"
                                            },
                                            {
                                                "name": "Creating",
                                                "value": "Creating"
                                            },
                                            {
                                                "name": "Deleted",
                                                "value": "Deleted"
                                            },
                                            {
                                                "name": "Deleting",
                                                "value": "Deleting"
                                            },
                                            {
                                                "name": "Failed",
                                                "value": "Failed"
                                            },
                                            {
                                                "name": "NotSpecified",
                                                "value": "NotSpecified"
                                            },
                                            {
                                                "name": "Succeeded",
                                                "value": "Succeeded"
                                            },
                                            {
                                                "name": "Updating",
                                                "value": "Updating"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ],
                    "operations": [
                        {
                            "longRunning": {
                                "finalStateVia": "azure-async-operation"
                            },
                            "operationId": "Certificates_Create",
                            "http": {
                                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}",
                                "request": {
                                    "method": "put",
                                    "path": {
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "certificateName",
                                                "arg": "$Path.certificateName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "deploymentName",
                                                "arg": "$Path.deploymentName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "resourceGroupName",
                                                "arg": "$Path.resourceGroupName",
                                                "required": true,
                                                "format": {
                                                    "maxLength": 90,
                                                    "minLength": 1
                                                }
                                            },
                                            {
                                                "type": "string",
                                                "name": "subscriptionId",
                                                "arg": "$Path.subscriptionId",
                                                "required": true,
                                                "format": {
                                                    "minLength": 1
                                                }
                                            }
                                        ]
                                    },
                                    "body": {
                                        "json": {
                                            "schema": {
                                                "type": "object",
                                                "name": "body",
                                                "props": [
                                                    {
                                                        "type": "ResourceLocation",
                                                        "name": "location",
                                                        "arg": "$body.location"
                                                    },
                                                    {
                                                        "type": "object",
                                                        "name": "properties",
                                                        "props": [
                                                            {
                                                                "type": "string",
                                                                "name": "certificateVirtualPath",
                                                                "arg": "$body.properties.certificateVirtualPath"
                                                            },
                                                            {
                                                                "type": "string",
                                                                "name": "keyVaultSecretId",
                                                                "arg": "$body.properties.keyVaultSecretId"
                                                            },
                                                            {
                                                                "type": "string",
                                                                "name": "keyVirtualPath",
                                                                "arg": "$body.properties.keyVirtualPath"
                                                            },
                                                            {
                                                                "type": "string",
                                                                "name": "provisioningState",
                                                                "arg": "$body.properties.provisioningState",
                                                                "enum": {
                                                                    "items": [
                                                                        {
                                                                            "value": "Accepted"
                                                                        },
                                                                        {
                                                                            "value": "Canceled"
                                                                        },
                                                                        {
                                                                            "value": "Creating"
                                                                        },
                                                                        {
                                                                            "value": "Deleted"
                                                                        },
                                                                        {
                                                                            "value": "Deleting"
                                                                        },
                                                                        {
                                                                            "value": "Failed"
                                                                        },
                                                                        {
                                                                            "value": "NotSpecified"
                                                                        },
                                                                        {
                                                                            "value": "Succeeded"
                                                                        },
                                                                        {
                                                                            "value": "Updating"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "name": "tags",
                                                        "arg": "$body.tags",
                                                        "additionalProps": {
                                                            "item": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "clientFlatten": true
                                            }
                                        }
                                    }
                                },
                                "responses": [
                                    {
                                        "statusCode": [
                                            200,
                                            201
                                        ],
                                        "body": {
                                            "json": {
                                                "var": "$Instance",
                                                "schema": {
                                                    "type": "object",
                                                    "props": [
                                                        {
                                                            "readOnly": true,
                                                            "type": "ResourceId",
                                                            "name": "id",
                                                            "format": {
                                                                "template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/certificates/{}"
                                                            }
                                                        },
                                                        {
                                                            "type": "ResourceLocation",
                                                            "name": "location"
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "name"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "properties",
                                                            "props": [
                                                                {
                                                                    "type": "string",
                                                                    "name": "certificateVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVaultSecretId"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "provisioningState",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Accepted"
                                                                            },
                                                                            {
                                                                                "value": "Canceled"
                                                                            },
                                                                            {
                                                                                "value": "Creating"
                                                                            },
                                                                            {
                                                                                "value": "Deleted"
                                                                            },
                                                                            {
                                                                                "value": "Deleting"
                                                                            },
                                                                            {
                                                                                "value": "Failed"
                                                                            },
                                                                            {
                                                                                "value": "NotSpecified"
                                                                            },
                                                                            {
                                                                                "value": "Succeeded"
                                                                            },
                                                                            {
                                                                                "value": "Updating"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "object",
                                                            "name": "systemData",
                                                            "props": [
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "createdAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "lastModifiedAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "tags",
                                                            "additionalProps": {
                                                                "item": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "type"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "isError": true,
                                        "body": {
                                            "json": {
                                                "schema": {
                                                    "type": "@ODataV4Format"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": [
                        {
                            "type": "object",
                            "ref": "$Instance",
                            "clientFlatten": true
                        }
                    ]
                },
                {
                    "name": "update",
                    "version": "2022-08-01",
                    "resources": [
                        {
                            "id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/certificates/{}",
                            "version": "2022-08-01",
                            "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NlcnRpZmljYXRlcy97Y2VydGlmaWNhdGVOYW1lfQ==/V/MjAyMi0wOC0wMQ=="
                        }
                    ],
                    "argGroups": [
                        {
                            "name": "",
                            "args": [
                                {
                                    "type": "string",
                                    "var": "$Path.certificateName",
                                    "options": [
                                        "n",
                                        "name",
                                        "certificate-name"
                                    ],
                                    "required": true,
                                    "idPart": "child_name_1",
                                    "help": {
                                        "short": "The name of certificate"
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$Path.deploymentName",
                                    "options": [
                                        "deployment-name"
                                    ],
                                    "required": true,
                                    "idPart": "name",
                                    "help": {
                                        "short": "The name of targeted Nginx deployment"
                                    }
                                },
                                {
                                    "type": "ResourceGroupName",
                                    "var": "$Path.resourceGroupName",
                                    "options": [
                                        "g",
                                        "resource-group"
                                    ],
                                    "required": true,
                                    "idPart": "resource_group"
                                },
                                {
                                    "type": "SubscriptionId",
                                    "var": "$Path.subscriptionId",
                                    "options": [
                                        "subscription"
                                    ],
                                    "required": true,
                                    "idPart": "subscription"
                                }
                            ]
                        },
                        {
                            "name": "Body",
                            "args": [
                                {
                                    "nullable": true,
                                    "type": "ResourceLocation",
                                    "var": "$body.location",
                                    "options": [
                                        "l",
                                        "location"
                                    ],
                                    "group": "Body"
                                },
                                {
                                    "nullable": true,
                                    "type": "object",
                                    "var": "$body.tags",
                                    "options": [
                                        "tags"
                                    ],
                                    "group": "Body",
                                    "additionalProps": {
                                        "item": {
                                            "nullable": true,
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Properties",
                            "args": [
                                {
                                    "nullable": true,
                                    "type": "string",
                                    "var": "$body.properties.certificateVirtualPath",
                                    "options": [
                                        "certificate-virtual-path"
                                    ],
                                    "group": "Properties"
                                },
                                {
                                    "nullable": true,
                                    "type": "string",
                                    "var": "$body.properties.keyVaultSecretId",
                                    "options": [
                                        "key-vault-secret-id"
                                    ],
                                    "group": "Properties"
                                },
                                {
                                    "nullable": true,
                                    "type": "string",
                                    "var": "$body.properties.keyVirtualPath",
                                    "options": [
                                        "key-virtual-path"
                                    ],
                                    "group": "Properties"
                                },
                                {
                                    "nullable": true,
                                    "type": "string",
                                    "var": "$body.properties.provisioningState",
                                    "options": [
                                        "provisioning-state"
                                    ],
                                    "hide": true,
                                    "group": "Properties",
                                    "help": {
                                        "short": "State of certificate"
                                    },
                                    "enum": {
                                        "items": [
                                            {
                                                "name": "Accepted",
                                                "value": "Accepted"
                                            },
                                            {
                                                "name": "Canceled",
                                                "value": "Canceled"
                                            },
                                            {
                                                "name": "Creating",
                                                "value": "Creating"
                                            },
                                            {
                                                "name": "Deleted",
                                                "value": "Deleted"
                                            },
                                            {
                                                "name": "Deleting",
                                                "value": "Deleting"
                                            },
                                            {
                                                "name": "Failed",
                                                "value": "Failed"
                                            },
                                            {
                                                "name": "NotSpecified",
                                                "value": "NotSpecified"
                                            },
                                            {
                                                "name": "Succeeded",
                                                "value": "Succeeded"
                                            },
                                            {
                                                "name": "Updating",
                                                "value": "Updating"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ],
                    "operations": [
                        {
                            "operationId": "Certificates_Get",
                            "http": {
                                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}",
                                "request": {
                                    "method": "get",
                                    "path": {
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "certificateName",
                                                "arg": "$Path.certificateName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "deploymentName",
                                                "arg": "$Path.deploymentName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "resourceGroupName",
                                                "arg": "$Path.resourceGroupName",
                                                "required": true,
                                                "format": {
                                                    "maxLength": 90,
                                                    "minLength": 1
                                                }
                                            },
                                            {
                                                "type": "string",
                                                "name": "subscriptionId",
                                                "arg": "$Path.subscriptionId",
                                                "required": true,
                                                "format": {
                                                    "minLength": 1
                                                }
                                            }
                                        ]
                                    }
                                },
                                "responses": [
                                    {
                                        "statusCode": [
                                            200
                                        ],
                                        "body": {
                                            "json": {
                                                "var": "$Instance",
                                                "schema": {
                                                    "type": "object",
                                                    "props": [
                                                        {
                                                            "readOnly": true,
                                                            "type": "ResourceId",
                                                            "name": "id",
                                                            "format": {
                                                                "template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/certificates/{}"
                                                            }
                                                        },
                                                        {
                                                            "type": "ResourceLocation",
                                                            "name": "location"
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "name"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "properties",
                                                            "props": [
                                                                {
                                                                    "type": "string",
                                                                    "name": "certificateVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVaultSecretId"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "keyVirtualPath"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "name": "provisioningState",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Accepted"
                                                                            },
                                                                            {
                                                                                "value": "Canceled"
                                                                            },
                                                                            {
                                                                                "value": "Creating"
                                                                            },
                                                                            {
                                                                                "value": "Deleted"
                                                                            },
                                                                            {
                                                                                "value": "Deleting"
                                                                            },
                                                                            {
                                                                                "value": "Failed"
                                                                            },
                                                                            {
                                                                                "value": "NotSpecified"
                                                                            },
                                                                            {
                                                                                "value": "Succeeded"
                                                                            },
                                                                            {
                                                                                "value": "Updating"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "object",
                                                            "name": "systemData",
                                                            "props": [
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "createdAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "createdByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "dateTime",
                                                                    "name": "lastModifiedAt"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedBy"
                                                                },
                                                                {
                                                                    "readOnly": true,
                                                                    "type": "string",
                                                                    "name": "lastModifiedByType",
                                                                    "enum": {
                                                                        "items": [
                                                                            {
                                                                                "value": "Application"
                                                                            },
                                                                            {
                                                                                "value": "Key"
                                                                            },
                                                                            {
                                                                                "value": "ManagedIdentity"
                                                                            },
                                                                            {
                                                                                "value": "User"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "name": "tags",
                                                            "additionalProps": {
                                                                "item": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "readOnly": true,
                                                            "type": "string",
                                                            "name": "type"
                                                        }
                                                    ],
                                                    "cls": "NginxCertificate_read"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "isError": true,
                                        "body": {
                                            "json": {
                                                "schema": {
                                                    "type": "@ODataV4Format"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "instanceUpdate": {
                                "instance": "$Instance",
                                "json": {
                                    "schema": {
                                        "type": "object",
                                        "name": "body",
                                        "props": [
                                            {
                                                "type": "ResourceLocation",
                                                "name": "location",
                                                "arg": "$body.location"
                                            },
                                            {
                                                "type": "object",
                                                "name": "properties",
                                                "props": [
                                                    {
                                                        "type": "string",
                                                        "name": "certificateVirtualPath",
                                                        "arg": "$body.properties.certificateVirtualPath"
                                                    },
                                                    {
                                                        "type": "string",
                                                        "name": "keyVaultSecretId",
                                                        "arg": "$body.properties.keyVaultSecretId"
                                                    },
                                                    {
                                                        "type": "string",
                                                        "name": "keyVirtualPath",
                                                        "arg": "$body.properties.keyVirtualPath"
                                                    },
                                                    {
                                                        "type": "string",
                                                        "name": "provisioningState",
                                                        "arg": "$body.properties.provisioningState",
                                                        "enum": {
                                                            "items": [
                                                                {
                                                                    "value": "Accepted"
                                                                },
                                                                {
                                                                    "value": "Canceled"
                                                                },
                                                                {
                                                                    "value": "Creating"
                                                                },
                                                                {
                                                                    "value": "Deleted"
                                                                },
                                                                {
                                                                    "value": "Deleting"
                                                                },
                                                                {
                                                                    "value": "Failed"
                                                                },
                                                                {
                                                                    "value": "NotSpecified"
                                                                },
                                                                {
                                                                    "value": "Succeeded"
                                                                },
                                                                {
                                                                    "value": "Updating"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "object",
                                                "name": "tags",
                                                "arg": "$body.tags",
                                                "additionalProps": {
                                                    "item": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        ],
                                        "clientFlatten": true
                                    }
                                }
                            }
                        },
                        {
                            "longRunning": {
                                "finalStateVia": "azure-async-operation"
                            },
                            "operationId": "Certificates_Create",
                            "http": {
                                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}",
                                "request": {
                                    "method": "put",
                                    "path": {
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "certificateName",
                                                "arg": "$Path.certificateName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "deploymentName",
                                                "arg": "$Path.deploymentName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "resourceGroupName",
                                                "arg": "$Path.resourceGroupName",
                                                "required": true,
                                                "format": {
                                                    "maxLength": 90,
                                                    "minLength": 1
                                                }
                                            },
                                            {
                                                "type": "string",
                                                "name": "subscriptionId",
                                                "arg": "$Path.subscriptionId",
                                                "required": true,
                                                "format": {
                                                    "minLength": 1
                                                }
                                            }
                                        ]
                                    },
                                    "body": {
                                        "json": {
                                            "ref": "$Instance"
                                        }
                                    }
                                },
                                "responses": [
                                    {
                                        "statusCode": [
                                            200,
                                            201
                                        ],
                                        "body": {
                                            "json": {
                                                "var": "$Instance",
                                                "schema": {
                                                    "type": "@NginxCertificate_read"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "isError": true,
                                        "body": {
                                            "json": {
                                                "schema": {
                                                    "type": "@ODataV4Format"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": [
                        {
                            "type": "object",
                            "ref": "$Instance",
                            "clientFlatten": true
                        }
                    ]
                },
                {
                    "name": "delete",
                    "version": "2022-08-01",
                    "resources": [
                        {
                            "id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/certificates/{}",
                            "version": "2022-08-01",
                            "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NlcnRpZmljYXRlcy97Y2VydGlmaWNhdGVOYW1lfQ==/V/MjAyMi0wOC0wMQ=="
                        }
                    ],
                    "argGroups": [
                        {
                            "name": "",
                            "args": [
                                {
                                    "type": "string",
                                    "var": "$Path.certificateName",
                                    "options": [
                                        "n",
                                        "name",
                                        "certificate-name"
                                    ],
                                    "required": true,
                                    "idPart": "child_name_1",
                                    "help": {
                                        "short": "The name of certificate"
                                    }
                                },
                                {
                                    "type": "string",
                                    "var": "$Path.deploymentName",
                                    "options": [
                                        "deployment-name"
                                    ],
                                    "required": true,
                                    "idPart": "name",
                                    "help": {
                                        "short": "The name of targeted Nginx deployment"
                                    }
                                },
                                {
                                    "type": "ResourceGroupName",
                                    "var": "$Path.resourceGroupName",
                                    "options": [
                                        "g",
                                        "resource-group"
                                    ],
                                    "required": true,
                                    "idPart": "resource_group"
                                },
                                {
                                    "type": "SubscriptionId",
                                    "var": "$Path.subscriptionId",
                                    "options": [
                                        "subscription"
                                    ],
                                    "required": true,
                                    "idPart": "subscription"
                                }
                            ]
                        }
                    ],
                    "operations": [
                        {
                            "longRunning": {
                                "finalStateVia": "azure-async-operation"
                            },
                            "operationId": "Certificates_Delete",
                            "http": {
                                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}",
                                "request": {
                                    "method": "delete",
                                    "path": {
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "certificateName",
                                                "arg": "$Path.certificateName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "deploymentName",
                                                "arg": "$Path.deploymentName",
                                                "required": true
                                            },
                                            {
                                                "type": "string",
                                                "name": "resourceGroupName",
                                                "arg": "$Path.resourceGroupName",
                                                "required": true,
                                                "format": {
                                                    "maxLength": 90,
                                                    "minLength": 1
                                                }
                                            },
                                            {
                                                "type": "string",
                                                "name": "subscriptionId",
                                                "arg": "$Path.subscriptionId",
                                                "required": true,
                                                "format": {
                                                    "minLength": 1
                                                }
                                            }
                                        ]
                                    }
                                },
                                "responses": [
                                    {
                                        "statusCode": [
                                            200
                                        ]
                                    },
                                    {
                                        "statusCode": [
                                            202
                                        ]
                                    },
                                    {
                                        "statusCode": [
                                            204
                                        ]
                                    },
                                    {
                                        "isError": true,
                                        "body": {
                                            "json": {
                                                "schema": {
                                                    "type": "@ODataV4Format"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "confirmation": "Are you sure you want to perform this operation?"
                }
            ]
        }
    ]
}