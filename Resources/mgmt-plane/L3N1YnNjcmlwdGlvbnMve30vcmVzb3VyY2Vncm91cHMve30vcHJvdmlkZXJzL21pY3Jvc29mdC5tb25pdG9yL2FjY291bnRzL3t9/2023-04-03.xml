<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/accounts/{}" version="2023-04-03" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9hY2NvdW50cy97YXp1cmVNb25pdG9yV29ya3NwYWNlTmFtZX0=/V/MjAyMy0wNC0wMw=="/>
  <commandGroup name="monitor account">
    <command name="show" version="2023-04-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/accounts/{}" version="2023-04-03" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9hY2NvdW50cy97YXp1cmVNb25pdG9yV29ya3NwYWNlTmFtZX0=/V/MjAyMy0wNC0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureMonitorWorkspaceName" options="azure-monitor-workspace-name name n" required="True" idPart="name">
          <help short="The name of the Azure Monitor workspace.  The name is case insensitive"/>
          <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureMonitorWorkspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}">
          <request method="get">
            <path>
              <param type="string" name="azureMonitorWorkspaceName" arg="$Path.azureMonitorWorkspaceName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-03&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/accounts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="accountId"/>
                    <prop readOnly="True" type="object" name="defaultIngestionSettings">
                      <prop readOnly="True" type="string" name="dataCollectionEndpointResourceId"/>
                      <prop readOnly="True" type="string" name="dataCollectionRuleResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metrics">
                      <prop readOnly="True" type="string" name="internalId"/>
                      <prop readOnly="True" type="string" name="prometheusQueryEndpoint"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections" identifiers="id">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-04-03" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/accounts/{}" version="2023-04-03" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9hY2NvdW50cy97YXp1cmVNb25pdG9yV29ya3NwYWNlTmFtZX0=/V/MjAyMy0wNC0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureMonitorWorkspaceName" options="azure-monitor-workspace-name name n" required="True" idPart="name">
          <help short="The name of the Azure Monitor workspace.  The name is case insensitive"/>
          <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureMonitorWorkspaces_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}">
          <request method="delete">
            <path>
              <param type="string" name="azureMonitorWorkspaceName" arg="$Path.azureMonitorWorkspaceName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-03&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-04-03">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/accounts/{}" version="2023-04-03" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9hY2NvdW50cy97YXp1cmVNb25pdG9yV29ya3NwYWNlTmFtZX0=/V/MjAyMy0wNC0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureMonitorWorkspaceName" options="azure-monitor-workspace-name name n" required="True" idPart="name">
          <help short="The name of the Azure Monitor workspace.  The name is case insensitive"/>
          <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AzureMonitorWorkspaceProperties">
        <arg type="ResourceLocation" var="$azureMonitorWorkspaceProperties.location" options="location l" required="True" group="AzureMonitorWorkspaceProperties">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$azureMonitorWorkspaceProperties.tags" options="tags" group="AzureMonitorWorkspaceProperties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AzureMonitorWorkspaces_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}">
          <request method="put">
            <path>
              <param type="string" name="azureMonitorWorkspaceName" arg="$Path.azureMonitorWorkspaceName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-03&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="azureMonitorWorkspaceProperties" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$azureMonitorWorkspaceProperties.location" required="True"/>
                  <prop type="object" name="tags" arg="$azureMonitorWorkspaceProperties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/accounts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="accountId"/>
                    <prop readOnly="True" type="object" name="defaultIngestionSettings">
                      <prop readOnly="True" type="string" name="dataCollectionEndpointResourceId"/>
                      <prop readOnly="True" type="string" name="dataCollectionRuleResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metrics">
                      <prop readOnly="True" type="string" name="internalId"/>
                      <prop readOnly="True" type="string" name="prometheusQueryEndpoint"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections" identifiers="id">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-04-03">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/accounts/{}" version="2023-04-03" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9hY2NvdW50cy97YXp1cmVNb25pdG9yV29ya3NwYWNlTmFtZX0=/V/MjAyMy0wNC0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureMonitorWorkspaceName" options="azure-monitor-workspace-name name n" required="True" idPart="name">
          <help short="The name of the Azure Monitor workspace.  The name is case insensitive"/>
          <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AzureMonitorWorkspaceProperties">
        <arg nullable="True" type="object" var="$azureMonitorWorkspaceProperties.tags" options="tags" group="AzureMonitorWorkspaceProperties">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AzureMonitorWorkspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}">
          <request method="get">
            <path>
              <param type="string" name="azureMonitorWorkspaceName" arg="$Path.azureMonitorWorkspaceName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-03&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AzureMonitorWorkspaceResource_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/accounts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="accountId"/>
                    <prop readOnly="True" type="object" name="defaultIngestionSettings">
                      <prop readOnly="True" type="string" name="dataCollectionEndpointResourceId"/>
                      <prop readOnly="True" type="string" name="dataCollectionRuleResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metrics">
                      <prop readOnly="True" type="string" name="internalId"/>
                      <prop readOnly="True" type="string" name="prometheusQueryEndpoint"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections" identifiers="id">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="azureMonitorWorkspaceProperties" required="True" clientFlatten="True">
              <prop type="object" name="tags" arg="$azureMonitorWorkspaceProperties.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AzureMonitorWorkspaces_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}">
          <request method="put">
            <path>
              <param type="string" name="azureMonitorWorkspaceName" arg="$Path.azureMonitorWorkspaceName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]+[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-03&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AzureMonitorWorkspaceResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
