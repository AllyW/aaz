<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}/collectorpolicies" version="2022-11-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9L2NvbGxlY3RvclBvbGljaWVz/V/MjAyMi0xMS0wMQ=="/>
  <commandGroup name="network-function traffic-collector collector-policy">
    <command name="list" version="2022-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkfunction/azuretrafficcollectors/{}/collectorpolicies" version="2022-11-01" swagger="mgmt-plane/networkfunction/ResourceProviders/Microsoft.NetworkFunction/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Z1bmN0aW9uL2F6dXJlVHJhZmZpY0NvbGxlY3RvcnMve2F6dXJlVHJhZmZpY0NvbGxlY3Rvck5hbWV9L2NvbGxlY3RvclBvbGljaWVz/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.azureTrafficCollectorName" options="traffic-collector-name t" required="True">
          <help short="Azure Traffic Collector name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
      </argGroup>
      <operation operationId="CollectorPolicies_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{azureTrafficCollectorName}/collectorPolicies">
          <request method="get">
            <path>
              <param type="string" name="azureTrafficCollectorName" arg="$Path.azureTrafficCollectorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
                <enum>
                  <item value="&quot;2022-05-01&quot;"/>
                  <item value="&quot;2022-08-01&quot;"/>
                  <item value="&quot;2022-11-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkFunction/azureTrafficCollectors/{}/collectorPolicies/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="emissionPolicies">
                          <item type="object">
                            <prop type="array<object>" name="emissionDestinations">
                              <item type="object">
                                <prop type="string" name="destinationType">
                                  <enum>
                                    <item value="&quot;AzureMonitor&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="emissionType">
                              <enum>
                                <item value="&quot;IPFIX&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="ingestionPolicy">
                          <prop type="array<object>" name="ingestionSources">
                            <item type="object">
                              <prop type="string" name="resourceId"/>
                              <prop type="string" name="sourceType">
                                <enum>
                                  <item value="&quot;Resource&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="ingestionType">
                            <enum>
                              <item value="&quot;IPFIX&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
