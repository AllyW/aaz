<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.fluidrelay/fluidrelayservers" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkZsdWlkUmVsYXkvZmx1aWRSZWxheVNlcnZlcnM=/V/MjAyMi0wNi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJz/V/MjAyMi0wNi0wMQ=="/>
  <commandGroup name="fluid-relay server">
    <command name="list" version="2022-06-01">
      <resource id="/subscriptions/{}/providers/microsoft.fluidrelay/fluidrelayservers" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkZsdWlkUmVsYXkvZmx1aWRSZWxheVNlcnZlcnM=/V/MjAyMi0wNi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.fluidrelay/fluidrelayservers" version="2022-06-01" swagger="mgmt-plane/fluidrelay/ResourceProviders/Microsoft.FluidRelay/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cH0vcHJvdmlkZXJzL01pY3Jvc29mdC5GbHVpZFJlbGF5L2ZsdWlkUmVsYXlTZXJ2ZXJz/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceGroup" options="resource-group g">
          <help short="The resource group containing the resource."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True">
          <help short="Name or ID of subscription."/>
        </arg>
      </argGroup>
      <condition var="$Condition_FluidRelayServers_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroup"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_FluidRelayServers_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroup"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_FluidRelayServers_ListByResourceGroup" operationId="FluidRelayServers_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers">
          <request method="get">
            <path>
              <param type="string" name="resourceGroup" arg="$Path.resourceGroup" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.FluidRelay/fluidRelayServers/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="encryption">
                          <prop type="object" name="customerManagedKeyEncryption">
                            <prop type="object" name="keyEncryptionKeyIdentity">
                              <prop type="string" name="identityType">
                                <enum>
                                  <item value="&quot;SystemAssigned&quot;"/>
                                  <item value="&quot;UserAssigned&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="userAssignedIdentityResourceId"/>
                            </prop>
                            <prop type="string" name="keyEncryptionKeyUrl"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="fluidRelayEndpoints">
                          <prop readOnly="True" type="array<string>" name="ordererEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="serviceEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="storageEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="frsTenantId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="storagesku">
                          <enum>
                            <item value="&quot;basic&quot;"/>
                            <item value="&quot;standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_FluidRelayServers_ListBySubscription" operationId="FluidRelayServers_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.FluidRelay/fluidRelayServers">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.FluidRelay/fluidRelayServers/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="encryption">
                          <prop type="object" name="customerManagedKeyEncryption">
                            <prop type="object" name="keyEncryptionKeyIdentity">
                              <prop type="string" name="identityType">
                                <enum>
                                  <item value="&quot;SystemAssigned&quot;"/>
                                  <item value="&quot;UserAssigned&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="userAssignedIdentityResourceId"/>
                            </prop>
                            <prop type="string" name="keyEncryptionKeyUrl"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="fluidRelayEndpoints">
                          <prop readOnly="True" type="array<string>" name="ordererEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="serviceEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="storageEndpoints">
                            <item readOnly="True" type="string"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="frsTenantId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="storagesku">
                          <enum>
                            <item value="&quot;basic&quot;"/>
                            <item value="&quot;standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
