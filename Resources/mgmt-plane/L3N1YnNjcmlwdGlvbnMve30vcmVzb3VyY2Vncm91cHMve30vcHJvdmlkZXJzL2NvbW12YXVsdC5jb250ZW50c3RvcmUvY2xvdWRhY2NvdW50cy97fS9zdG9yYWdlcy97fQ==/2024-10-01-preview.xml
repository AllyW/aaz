<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}" version="2024-10-01-preview" swagger="mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="commvault content-store cloud-account storage">
    <command name="show" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}" version="2024-10-01-preview" swagger="mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudAccountName" options="cloud-account-name" required="True" idPart="name">
          <help short="Name of the Cloud Account resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageName" options="storage-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Storage resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Storages_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}">
          <request method="get">
            <path>
              <param type="string" name="cloudAccountName" arg="$Path.cloudAccountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageName" arg="$Path.storageName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="class" required="True">
                      <enum>
                        <item value="&quot;COLD&quot;"/>
                        <item value="&quot;HOT&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="location" required="True">
                      <format maxLength="50" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageType" required="True">
                      <enum>
                        <item value="&quot;Air_Gap_Protect&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vendor" required="True">
                      <enum>
                        <item value="&quot;Azure_Blob_Storage&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-10-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}" version="2024-10-01-preview" swagger="mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudAccountName" options="cloud-account-name" required="True" idPart="name">
          <help short="Name of the Cloud Account resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageName" options="storage-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Storage resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Storages_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}">
          <request method="delete">
            <path>
              <param type="string" name="cloudAccountName" arg="$Path.cloudAccountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageName" arg="$Path.storageName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}" version="2024-10-01-preview" swagger="mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudAccountName" options="cloud-account-name" required="True" idPart="name">
          <help short="Name of the Cloud Account resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageName" options="storage-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Storage resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.class" options="class" group="Properties">
          <help short="The class of Commvault Storage"/>
          <enum>
            <item name="COLD" value="&quot;COLD&quot;"/>
            <item name="HOT" value="&quot;HOT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.location" options="location" group="Properties">
          <help short="Location of the Commvault Storage"/>
          <format maxLength="50" minLength="1"/>
        </arg>
        <arg type="string" var="$resource.properties.storageType" options="storage-type" group="Properties">
          <help short="The type of Commvault Storage"/>
          <enum>
            <item name="Air_Gap_Protect" value="&quot;Air_Gap_Protect&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.vendor" options="vendor" group="Properties">
          <help short="The vendor of Commvault Storage"/>
          <enum>
            <item name="Azure_Blob_Storage" value="&quot;Azure_Blob_Storage&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Storages_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}">
          <request method="put">
            <path>
              <param type="string" name="cloudAccountName" arg="$Path.cloudAccountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageName" arg="$Path.storageName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="class" arg="$resource.properties.class" required="True">
                      <enum>
                        <item value="&quot;COLD&quot;"/>
                        <item value="&quot;HOT&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="location" arg="$resource.properties.location" required="True">
                      <format maxLength="50" minLength="1"/>
                    </prop>
                    <prop type="string" name="storageType" arg="$resource.properties.storageType" required="True">
                      <enum>
                        <item value="&quot;Air_Gap_Protect&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vendor" arg="$resource.properties.vendor" required="True">
                      <enum>
                        <item value="&quot;Azure_Blob_Storage&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="class" required="True">
                      <enum>
                        <item value="&quot;COLD&quot;"/>
                        <item value="&quot;HOT&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="location" required="True">
                      <format maxLength="50" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageType" required="True">
                      <enum>
                        <item value="&quot;Air_Gap_Protect&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vendor" required="True">
                      <enum>
                        <item value="&quot;Azure_Blob_Storage&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}" version="2024-10-01-preview" swagger="mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudAccountName" options="cloud-account-name" required="True" idPart="name">
          <help short="Name of the Cloud Account resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageName" options="storage-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Storage resource"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.class" options="class" group="Properties">
          <help short="The class of Commvault Storage"/>
          <enum>
            <item name="COLD" value="&quot;COLD&quot;"/>
            <item name="HOT" value="&quot;HOT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.storageType" options="storage-type" group="Properties">
          <help short="The type of Commvault Storage"/>
          <enum>
            <item name="Air_Gap_Protect" value="&quot;Air_Gap_Protect&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.vendor" options="vendor" group="Properties">
          <help short="The vendor of Commvault Storage"/>
          <enum>
            <item name="Azure_Blob_Storage" value="&quot;Azure_Blob_Storage&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Storages_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}">
          <request method="get">
            <path>
              <param type="string" name="cloudAccountName" arg="$Path.cloudAccountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageName" arg="$Path.storageName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="class" required="True">
                      <enum>
                        <item value="&quot;COLD&quot;"/>
                        <item value="&quot;HOT&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="location" required="True">
                      <format maxLength="50" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageType" required="True">
                      <enum>
                        <item value="&quot;Air_Gap_Protect&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vendor" required="True">
                      <enum>
                        <item value="&quot;Azure_Blob_Storage&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="string" name="class" arg="$resource.properties.class" required="True">
                  <enum>
                    <item value="&quot;COLD&quot;"/>
                    <item value="&quot;HOT&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="storageType" arg="$resource.properties.storageType" required="True">
                  <enum>
                    <item value="&quot;Air_Gap_Protect&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="vendor" arg="$resource.properties.vendor" required="True">
                  <enum>
                    <item value="&quot;Azure_Blob_Storage&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Storages_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}">
          <request method="put">
            <path>
              <param type="string" name="cloudAccountName" arg="$Path.cloudAccountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageName" arg="$Path.storageName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="class" required="True">
                      <enum>
                        <item value="&quot;COLD&quot;"/>
                        <item value="&quot;HOT&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="location" required="True">
                      <format maxLength="50" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageType" required="True">
                      <enum>
                        <item value="&quot;Air_Gap_Protect&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vendor" required="True">
                      <enum>
                        <item value="&quot;Azure_Blob_Storage&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
