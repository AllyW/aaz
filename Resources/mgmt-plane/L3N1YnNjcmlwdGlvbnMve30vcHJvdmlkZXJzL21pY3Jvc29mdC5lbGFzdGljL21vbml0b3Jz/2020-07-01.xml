<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.elastic/monitors" version="2020-07-01" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkVsYXN0aWMvbW9uaXRvcnM=/V/MjAyMC0wNy0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors" version="2020-07-01" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycw==/V/MjAyMC0wNy0wMQ=="/>
  <commandGroup name="elastic-monitor">
    <command name="list" version="2020-07-01">
      <resource id="/subscriptions/{}/providers/microsoft.elastic/monitors" version="2020-07-01" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkVsYXN0aWMvbW9uaXRvcnM=/V/MjAyMC0wNy0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors" version="2020-07-01" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycw==/V/MjAyMC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
      </argGroup>
      <condition var="$Condition_Monitors_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Monitors_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Monitors_ListByResourceGroup" operationId="Monitors_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="2020-07-01"/>
                <enum>
                  <item value="2020-07-01"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="SystemAssigned"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="object" name="elasticProperties">
                          <prop type="object" name="elasticCloudDeployment">
                            <prop readOnly="True" type="string" name="azureSubscriptionId"/>
                            <prop readOnly="True" type="string" name="deploymentId"/>
                            <prop readOnly="True" type="string" name="elasticsearchRegion"/>
                            <prop readOnly="True" type="string" name="elasticsearchServiceUrl"/>
                            <prop readOnly="True" type="string" name="kibanaServiceUrl"/>
                            <prop readOnly="True" type="string" name="kibanaSsoUrl"/>
                            <prop readOnly="True" type="string" name="name"/>
                          </prop>
                          <prop type="object" name="elasticCloudUser">
                            <prop readOnly="True" type="string" name="elasticCloudSsoDefaultUrl"/>
                            <prop readOnly="True" type="string" name="emailAddress"/>
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="liftrResourceCategory">
                          <enum>
                            <item value="MonitorLogs"/>
                            <item value="Unknown"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                        <prop type="string" name="monitoringStatus">
                          <enum>
                            <item value="Disabled"/>
                            <item value="Enabled"/>
                          </enum>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="Accepted"/>
                            <item value="Canceled"/>
                            <item value="Creating"/>
                            <item value="Deleted"/>
                            <item value="Deleting"/>
                            <item value="Failed"/>
                            <item value="NotSpecified"/>
                            <item value="Succeeded"/>
                            <item value="Updating"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="string" name="name" required="True"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Monitors_List" operationId="Monitors_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="2020-07-01"/>
                <enum>
                  <item value="2020-07-01"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="SystemAssigned"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="object" name="elasticProperties">
                          <prop type="object" name="elasticCloudDeployment">
                            <prop readOnly="True" type="string" name="azureSubscriptionId"/>
                            <prop readOnly="True" type="string" name="deploymentId"/>
                            <prop readOnly="True" type="string" name="elasticsearchRegion"/>
                            <prop readOnly="True" type="string" name="elasticsearchServiceUrl"/>
                            <prop readOnly="True" type="string" name="kibanaServiceUrl"/>
                            <prop readOnly="True" type="string" name="kibanaSsoUrl"/>
                            <prop readOnly="True" type="string" name="name"/>
                          </prop>
                          <prop type="object" name="elasticCloudUser">
                            <prop readOnly="True" type="string" name="elasticCloudSsoDefaultUrl"/>
                            <prop readOnly="True" type="string" name="emailAddress"/>
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="liftrResourceCategory">
                          <enum>
                            <item value="MonitorLogs"/>
                            <item value="Unknown"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                        <prop type="string" name="monitoringStatus">
                          <enum>
                            <item value="Disabled"/>
                            <item value="Enabled"/>
                          </enum>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="Accepted"/>
                            <item value="Canceled"/>
                            <item value="Creating"/>
                            <item value="Deleted"/>
                            <item value="Deleting"/>
                            <item value="Failed"/>
                            <item value="NotSpecified"/>
                            <item value="Succeeded"/>
                            <item value="Updating"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="string" name="name" required="True"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
