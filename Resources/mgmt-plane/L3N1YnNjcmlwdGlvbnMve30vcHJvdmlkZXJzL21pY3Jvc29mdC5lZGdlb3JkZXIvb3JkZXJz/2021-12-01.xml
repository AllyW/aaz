<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.edgeorder/orders" version="2021-12-01" swagger="mgmt-plane/edgeorder/ResourceProviders/Microsoft.EdgeOrder/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkVkZ2VPcmRlci9vcmRlcnM=/V/MjAyMS0xMi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edgeorder/orders" version="2021-12-01" swagger="mgmt-plane/edgeorder/ResourceProviders/Microsoft.EdgeOrder/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZU9yZGVyL29yZGVycw==/V/MjAyMS0xMi0wMQ=="/>
  <commandGroup name="edge-order order">
    <command name="list" version="2021-12-01">
      <resource id="/subscriptions/{}/providers/microsoft.edgeorder/orders" version="2021-12-01" swagger="mgmt-plane/edgeorder/ResourceProviders/Microsoft.EdgeOrder/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkVkZ2VPcmRlci9vcmRlcnM=/V/MjAyMS0xMi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edgeorder/orders" version="2021-12-01" swagger="mgmt-plane/edgeorder/ResourceProviders/Microsoft.EdgeOrder/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZU9yZGVyL29yZGVycw==/V/MjAyMS0xMi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
        <arg type="string" var="$Query.skipToken" options="skip-token">
          <help short="$skipToken is supported on Get list of order, which provides the next page in the list of order."/>
        </arg>
      </argGroup>
      <condition var="$Condition_ListOrderAtResourceGroupLevel">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_ListOrderAtSubscriptionLevel">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_ListOrderAtResourceGroupLevel" operationId="ListOrderAtResourceGroupLevel">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EdgeOrder/orders">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$skipToken" arg="$Query.skipToken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="2021-12-01"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item readOnly="True" type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EdgeOrder/locations/{}/orders/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="object" name="currentStage" cls="StageDetails_read">
                          <prop readOnly="True" type="string" name="displayName"/>
                          <prop readOnly="True" type="string" name="stageName">
                            <enum>
                              <item value="Cancelled"/>
                              <item value="Confirmed"/>
                              <item value="Delivered"/>
                              <item value="InReview"/>
                              <item value="InUse"/>
                              <item value="Placed"/>
                              <item value="ReadyToShip"/>
                              <item value="ReturnCompleted"/>
                              <item value="ReturnInitiated"/>
                              <item value="ReturnPickedUp"/>
                              <item value="ReturnedToMicrosoft"/>
                              <item value="Shipped"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="stageStatus">
                            <enum>
                              <item value="Cancelled"/>
                              <item value="Cancelling"/>
                              <item value="Failed"/>
                              <item value="InProgress"/>
                              <item value="None"/>
                              <item value="Succeeded"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="orderItemIds">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<@StageDetails_read>" name="orderStageHistory">
                          <item readOnly="True" type="@StageDetails_read"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_ListOrderAtSubscriptionLevel" operationId="ListOrderAtSubscriptionLevel">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.EdgeOrder/orders">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$skipToken" arg="$Query.skipToken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="2021-12-01"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item readOnly="True" type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EdgeOrder/locations/{}/orders/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="@StageDetails_read" name="currentStage"/>
                        <prop readOnly="True" type="array<string>" name="orderItemIds">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<@StageDetails_read>" name="orderStageHistory">
                          <item readOnly="True" type="@StageDetails_read"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="Application"/>
                            <item value="Key"/>
                            <item value="ManagedIdentity"/>
                            <item value="User"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
