<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:apicenter.dataapi">
  <resource id="/workspaces/{}/apis/{}" version="2024-02-01-preview" swagger="data-plane:apicenter.dataapi/apicenter/ResourceProviders/ApiCenter.DataApi/Paths/L3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2FwaXMve2FwaU5hbWV9/V/MjAyNC0wMi0wMS1wcmV2aWV3"/>
  <commandGroup name="api-center data-api workspace api">
    <command name="show" version="2024-02-01-preview">
      <resource id="/workspaces/{}/apis/{}" version="2024-02-01-preview" swagger="data-plane:apicenter.dataapi/apicenter/ResourceProviders/ApiCenter.DataApi/Paths/L3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2FwaXMve2FwaU5hbWV9/V/MjAyNC0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.apiName" options="api-name" required="True">
          <help short="Api identifier."/>
          <format maxLength="50"/>
        </arg>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True">
          <help short="Workspace identifier."/>
          <format maxLength="50"/>
        </arg>
      </argGroup>
      <operation operationId="Apis_Get">
        <http path="/workspaces/{workspaceName}/apis/{apiName}">
          <request method="get">
            <path>
              <param type="string" name="apiName" arg="$Path.apiName" required="True">
                <format maxLength="50"/>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="50"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="contacts">
                    <item type="object">
                      <prop type="string" name="email">
                        <format maxLength="100"/>
                      </prop>
                      <prop type="string" name="name" required="True">
                        <format maxLength="100"/>
                      </prop>
                      <prop type="string" name="url"/>
                    </item>
                  </prop>
                  <prop type="string" name="description">
                    <format maxLength="1000"/>
                  </prop>
                  <prop type="array<object>" name="externalDocumentation">
                    <item type="object">
                      <prop type="string" name="description" required="True">
                        <format maxLength="1000"/>
                      </prop>
                      <prop type="string" name="title" required="True">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="url" required="True"/>
                    </item>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;graphql&quot;"/>
                      <item value="&quot;grpc&quot;"/>
                      <item value="&quot;rest&quot;"/>
                      <item value="&quot;soap&quot;"/>
                      <item value="&quot;webhook&quot;"/>
                      <item value="&quot;websocket&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="dateTime" name="lastUpdated"/>
                  <prop type="object" name="license">
                    <prop type="string" name="identifier">
                      <format maxLength="200"/>
                    </prop>
                    <prop type="string" name="name" required="True">
                      <format maxLength="50"/>
                    </prop>
                    <prop type="string" name="url"/>
                  </prop>
                  <prop readOnly="True" type="string" name="lifecycleStage">
                    <enum>
                      <item value="&quot;deprecated&quot;"/>
                      <item value="&quot;design&quot;"/>
                      <item value="&quot;development&quot;"/>
                      <item value="&quot;preview&quot;"/>
                      <item value="&quot;production&quot;"/>
                      <item value="&quot;retired&quot;"/>
                      <item value="&quot;testing&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="name" required="True">
                    <format maxLength="50"/>
                  </prop>
                  <prop type="string" name="summary">
                    <format maxLength="200"/>
                  </prop>
                  <prop type="object" name="termsOfService">
                    <prop type="string" name="url" required="True"/>
                  </prop>
                  <prop type="string" name="title" required="True">
                    <format maxLength="50"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema readOnly="True" type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
