<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:microsoft.voiceservices">
  <resource id="/accounts/{}/teamscivicaddresses/{}" version="2024-02-29-preview" swagger="data-plane:microsoft.voiceservices/voiceservices/ResourceProviders/Microsoft.VoiceServices/Paths/L2FjY291bnRzL3thY2NvdW50TmFtZX0vdGVhbXNDaXZpY0FkZHJlc3Nlcy97Y2l2aWNBZGRyZXNzSWR9/V/MjAyNC0wMi0yOS1wcmV2aWV3"/>
  <commandGroup name="voice-services account teams-civic-address">
    <command name="show" version="2024-02-29-preview">
      <resource id="/accounts/{}/teamscivicaddresses/{}" version="2024-02-29-preview" swagger="data-plane:microsoft.voiceservices/voiceservices/ResourceProviders/Microsoft.VoiceServices/Paths/L2FjY291bnRzL3thY2NvdW50TmFtZX0vdGVhbXNDaXZpY0FkZHJlc3Nlcy97Y2l2aWNBZGRyZXNzSWR9/V/MjAyNC0wMi0yOS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="The request should only proceed if an entity matches this string."/>
        </arg>
        <arg type="dateTime" var="$Header.If-Modified-Since" options="if-modified-since">
          <help short="The request should only proceed if the entity was modified after this time."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="The request should only proceed if no entity matches this string."/>
        </arg>
        <arg type="dateTime" var="$Header.If-Unmodified-Since" options="if-unmodified-since">
          <help short="The request should only proceed if the entity was not modified after this time."/>
        </arg>
        <arg type="string" var="$Path.accountName" options="account-name" required="True">
          <help short="Name of the account."/>
          <format pattern="^([A-Za-z0-9_-]+)$" maxLength="100" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.civicAddressId" options="civic-address-id" required="True">
          <help short="The ID of the civic address."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Accounts_GetTeamsCivicAddress">
        <http path="/accounts/{accountName}/teamsCivicAddresses/{civicAddressId}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^([A-Za-z0-9_-]+)$" maxLength="100" minLength="1"/>
              </param>
              <param type="string" name="civicAddressId" arg="$Path.civicAddressId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-29-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="dateTime" name="If-Modified-Since" arg="$Header.If-Modified-Since"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
              <param type="dateTime" name="If-Unmodified-Since" arg="$Header.If-Unmodified-Since"/>
            </header>
          </request>
          <response statusCode="200">
            <header>
              <item name="ETag"/>
              <item name="x-ms-client-request-id"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="cityOrTown"/>
                  <prop readOnly="True" type="string" name="cityOrTownAlias"/>
                  <prop readOnly="True" type="string" name="companyId"/>
                  <prop readOnly="True" type="string" name="companyName"/>
                  <prop readOnly="True" type="string" name="country"/>
                  <prop readOnly="True" type="string" name="countyOrDistrict"/>
                  <prop readOnly="True" type="string" name="defaultLocationId">
                    <format minLength="1"/>
                  </prop>
                  <prop readOnly="True" type="string" name="description"/>
                  <prop readOnly="True" type="string" name="houseNumber"/>
                  <prop readOnly="True" type="string" name="houseNumberSuffix"/>
                  <prop readOnly="True" type="string" name="id">
                    <format minLength="1"/>
                  </prop>
                  <prop readOnly="True" type="string" name="latitude"/>
                  <prop readOnly="True" type="array<object>" name="locations">
                    <item type="object">
                      <prop readOnly="True" type="string" name="additionalInfo"/>
                      <prop readOnly="True" type="string" name="civicAddressId">
                        <format minLength="1"/>
                      </prop>
                      <prop readOnly="True" type="string" name="description"/>
                      <prop readOnly="True" type="string" name="elin"/>
                      <prop readOnly="True" type="string" name="id">
                        <format minLength="1"/>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isDefault"/>
                    </item>
                  </prop>
                  <prop readOnly="True" type="string" name="longitude"/>
                  <prop readOnly="True" type="string" name="partnerId"/>
                  <prop readOnly="True" type="string" name="postDirectional"/>
                  <prop readOnly="True" type="string" name="postalOrZipCode"/>
                  <prop readOnly="True" type="string" name="preDirectional"/>
                  <prop readOnly="True" type="string" name="stateOrProvince"/>
                  <prop readOnly="True" type="string" name="streetName"/>
                  <prop readOnly="True" type="string" name="streetSuffix"/>
                  <prop readOnly="True" type="string" name="tenantId"/>
                  <prop readOnly="True" type="string" name="validationStatus">
                    <enum>
                      <item value="&quot;notValidated&quot;"/>
                      <item value="&quot;validated&quot;"/>
                    </enum>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
