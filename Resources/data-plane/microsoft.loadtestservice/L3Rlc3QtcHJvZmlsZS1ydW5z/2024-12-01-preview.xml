<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:microsoft.loadtestservice">
  <resource id="/test-profile-runs" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3Rlc3QtcHJvZmlsZS1ydW5z/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="load-test-service test-profile-run">
    <command name="list" version="2024-12-01-preview">
      <resource id="/test-profile-runs" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3Rlc3QtcHJvZmlsZS1ydW5z/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.endpoint" options="endpoint" required="True"/>
        <arg type="dateTime" var="$Query.createdDateEndTime" options="created-date-end-time">
          <help short="End DateTime(RFC 3339 literal format) of the created time range to filter test profile runs."/>
        </arg>
        <arg type="dateTime" var="$Query.createdDateStartTime" options="created-date-start-time">
          <help short="Start DateTime(RFC 3339 literal format) of the created time range to filter test profile runs."/>
        </arg>
        <arg type="dateTime" var="$Query.maxEndDateTime" options="max-end-date-time">
          <help short="Maximum End DateTime(RFC 3339 literal format) of the test profile runs to filter on."/>
        </arg>
        <arg type="dateTime" var="$Query.maxStartDateTime" options="max-start-date-time">
          <help short="Maximum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on."/>
        </arg>
        <arg type="integer32" var="$Query.maxpagesize" options="maxpagesize">
          <help short="Maximum number of results to include in a single response."/>
        </arg>
        <arg type="dateTime" var="$Query.minEndDateTime" options="min-end-date-time">
          <help short="Minimum End DateTime(RFC 3339 literal format) of the test profile runs to filter on."/>
        </arg>
        <arg type="dateTime" var="$Query.minStartDateTime" options="min-start-date-time">
          <help short="Minimum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on."/>
        </arg>
        <arg type="array<string>" var="$Query.statuses" options="statuses">
          <help short="Comma separated list of Statuses of the test profile runs to filter."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$Query.testProfileIds" options="test-profile-ids">
          <help short="Comma separated IDs of the test profiles which should be associated with the test profile runs to fetch."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$Query.testProfileRunIds" options="test-profile-run-ids">
          <help short="Comma separated list of IDs of the test profile runs to filter."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="TestProfileRunAdministration_ListTestProfileRuns">
        <http path="//{endpoint}/test-profile-runs">
          <request method="get">
            <path>
              <param type="string" name="endpoint" arg="$Path.endpoint" required="True"/>
            </path>
            <query>
              <param type="dateTime" name="createdDateEndTime" arg="$Query.createdDateEndTime"/>
              <param type="dateTime" name="createdDateStartTime" arg="$Query.createdDateStartTime"/>
              <param type="dateTime" name="maxEndDateTime" arg="$Query.maxEndDateTime"/>
              <param type="dateTime" name="maxStartDateTime" arg="$Query.maxStartDateTime"/>
              <param type="integer32" name="maxpagesize" arg="$Query.maxpagesize"/>
              <param type="dateTime" name="minEndDateTime" arg="$Query.minEndDateTime"/>
              <param type="dateTime" name="minStartDateTime" arg="$Query.minStartDateTime"/>
              <param type="array<string>" name="statuses" arg="$Query.statuses">
                <item type="string"/>
              </param>
              <param type="array<string>" name="testProfileIds" arg="$Query.testProfileIds">
                <item type="string"/>
              </param>
              <param type="array<string>" name="testProfileRunIds" arg="$Query.testProfileRunIds">
                <item type="string"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="string" name="createdBy"/>
                      <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                      <prop type="string" name="description">
                        <format maxLength="100"/>
                      </prop>
                      <prop type="string" name="displayName">
                        <format maxLength="50" minLength="2"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="durationInSeconds"/>
                      <prop readOnly="True" type="dateTime" name="endDateTime"/>
                      <prop readOnly="True" type="array<object>" name="errorDetails">
                        <item type="object">
                          <prop readOnly="True" type="string" name="message"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="lastModifiedBy"/>
                      <prop readOnly="True" type="dateTime" name="lastModifiedDateTime"/>
                      <prop readOnly="True" type="array<object>" name="recommendations">
                        <item type="object">
                          <prop type="string" name="category" required="True">
                            <enum>
                              <item value="&quot;CostOptimized&quot;"/>
                              <item value="&quot;ThroughputOptimized&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="configurations">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="startDateTime"/>
                      <prop readOnly="True" type="string" name="status">
                        <enum>
                          <item value="&quot;ACCEPTED&quot;"/>
                          <item value="&quot;CANCELLED&quot;"/>
                          <item value="&quot;CANCELLING&quot;"/>
                          <item value="&quot;DONE&quot;"/>
                          <item value="&quot;EXECUTING&quot;"/>
                          <item value="&quot;FAILED&quot;"/>
                          <item value="&quot;NOTSTARTED&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="targetResourceConfigurations">
                        <prop type="string" name="kind" required="True">
                          <enum>
                            <item value="&quot;FunctionsFlexConsumption&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="kind" value="FunctionsFlexConsumption">
                          <prop type="object" name="configurations">
                            <additionalProp>
                              <item type="object">
                                <prop type="integer64" name="httpConcurrency"/>
                                <prop type="integer64" name="instanceMemoryMB" required="True"/>
                              </item>
                            </additionalProp>
                          </prop>
                        </discriminator>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="targetResourceId"/>
                      <prop type="string" name="testProfileId"/>
                      <prop readOnly="True" type="string" name="testProfileRunId">
                        <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
                      </prop>
                      <prop readOnly="True" type="object" name="testRunDetails">
                        <additionalProp readOnly="True">
                          <item type="object">
                            <prop type="string" name="configurationId" required="True"/>
                            <prop type="object" name="properties" required="True">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="status" required="True">
                              <enum>
                                <item value="&quot;ACCEPTED&quot;"/>
                                <item value="&quot;CANCELLED&quot;"/>
                                <item value="&quot;CANCELLING&quot;"/>
                                <item value="&quot;CONFIGURED&quot;"/>
                                <item value="&quot;CONFIGURING&quot;"/>
                                <item value="&quot;DEPROVISIONED&quot;"/>
                                <item value="&quot;DEPROVISIONING&quot;"/>
                                <item value="&quot;DONE&quot;"/>
                                <item value="&quot;EXECUTED&quot;"/>
                                <item value="&quot;EXECUTING&quot;"/>
                                <item value="&quot;FAILED&quot;"/>
                                <item value="&quot;NOTSTARTED&quot;"/>
                                <item value="&quot;PROVISIONED&quot;"/>
                                <item value="&quot;PROVISIONING&quot;"/>
                                <item value="&quot;VALIDATION_FAILURE&quot;"/>
                                <item value="&quot;VALIDATION_SUCCESS&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
