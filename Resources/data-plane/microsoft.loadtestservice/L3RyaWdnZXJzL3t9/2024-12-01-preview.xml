<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:microsoft.loadtestservice">
  <resource id="/triggers/{}" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3RyaWdnZXJzL3t0cmlnZ2VySWR9/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="load-test-service trigger">
    <command name="show" version="2024-12-01-preview">
      <resource id="/triggers/{}" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3RyaWdnZXJzL3t0cmlnZ2VySWR9/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.triggerId" options="trigger-id" required="True">
          <help short="The unique identifier of the trigger."/>
          <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
        </arg>
      </argGroup>
      <operation operationId="TriggerAdministration_GetTrigger">
        <http path="/triggers/{triggerId}">
          <request method="get">
            <path>
              <param type="string" name="triggerId" arg="$Path.triggerId" required="True">
                <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="createdBy"/>
                  <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                  <prop type="string" name="description">
                    <format maxLength="100"/>
                  </prop>
                  <prop type="string" name="displayName" required="True">
                    <format maxLength="50" minLength="2"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;ScheduleTestsTrigger&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="lastModifiedBy"/>
                  <prop readOnly="True" type="dateTime" name="lastModifiedDateTime"/>
                  <prop type="string" name="state">
                    <enum>
                      <item value="&quot;Active&quot;"/>
                      <item value="&quot;Completed&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Paused&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="object" name="stateDetails">
                    <prop type="string" name="message"/>
                  </prop>
                  <prop readOnly="True" type="string" name="triggerId">
                    <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
                  </prop>
                  <discriminator property="kind" value="ScheduleTestsTrigger">
                    <prop type="object" name="recurrence">
                      <prop type="string" name="frequency" required="True">
                        <enum>
                          <item value="&quot;Cron&quot;"/>
                          <item value="&quot;Daily&quot;"/>
                          <item value="&quot;Hourly&quot;"/>
                          <item value="&quot;MonthlyByDates&quot;"/>
                          <item value="&quot;MonthlyByDays&quot;"/>
                          <item value="&quot;Weekly&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="recurrenceEnd">
                        <prop type="dateTime" name="endDateTime"/>
                        <prop type="integer32" name="numberOfOccurrences"/>
                      </prop>
                      <discriminator property="frequency" value="Cron">
                        <prop type="string" name="cronExpression" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Daily">
                        <prop type="integer32" name="interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Hourly">
                        <prop type="integer32" name="interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDates">
                        <prop type="array<integer32>" name="datesInMonth">
                          <item type="integer32"/>
                        </prop>
                        <prop type="integer32" name="interval"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDays">
                        <prop type="integer32" name="index" required="True">
                          <format maximum="5" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="interval" required="True"/>
                        <prop type="array<string>" name="weekDaysInMonth">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="frequency" value="Weekly">
                        <prop type="array<string>" name="daysOfWeek">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="integer32" name="interval"/>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="object" name="recurrenceStatus">
                      <prop type="array<dateTime>" name="nextScheduledDateTimes">
                        <item type="dateTime"/>
                      </prop>
                      <prop type="integer32" name="remainingOccurrences"/>
                    </prop>
                    <prop type="dateTime" name="startDateTime"/>
                    <prop type="array<string>" name="testIds" required="True">
                      <item type="string"/>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema readOnly="True" type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-12-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/triggers/{}" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3RyaWdnZXJzL3t0cmlnZ2VySWR9/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.triggerId" options="trigger-id" required="True">
          <help short="The unique identifier of the trigger."/>
          <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
        </arg>
      </argGroup>
      <operation operationId="TriggerAdministration_DeleteTrigger">
        <http path="/triggers/{triggerId}">
          <request method="delete">
            <path>
              <param type="string" name="triggerId" arg="$Path.triggerId" required="True">
                <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="204"/>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema readOnly="True" type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="update" version="2024-12-01-preview">
      <resource id="/triggers/{}" version="2024-12-01-preview" swagger="data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3RyaWdnZXJzL3t0cmlnZ2VySWR9/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.triggerId" options="trigger-id" required="True">
          <help short="The unique identifier of the trigger."/>
          <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.ScheduleTestsTrigger" options="schedule-tests-trigger" group="Body">
          <arg type="object" var="$body.ScheduleTestsTrigger.recurrence" options="recurrence">
            <help short="Recurrence details of the trigger. Null if schedule is not recurring."/>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.Cron" options="cron">
              <arg type="string" var="$body.ScheduleTestsTrigger.recurrence.Cron.cronExpression" options="cron-expression" required="True">
                <help short="Cron expression for the recurrence."/>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.Daily" options="daily">
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.Daily.interval" options="interval" required="True">
                <help short="The interval at which the recurrence should repeat. It signifies the number of days between each recurrence."/>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.Hourly" options="hourly">
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.Hourly.interval" options="interval" required="True">
                <help short="The interval at which the recurrence should repeat. It signifies the number of hours between each recurrence."/>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates" options="monthly-by-dates">
              <arg type="array<integer32>" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates.datesInMonth" options="dates-in-month">
                <help short="Recurrence set to repeat on the specified dates of the month. Value of dates can be 1 to 31 and -1. -1 represents the last day of the month."/>
                <item type="integer32"/>
              </arg>
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates.interval" options="interval">
                <help short="The interval at which the recurrence should repeat. It signifies the number of months between each recurrence."/>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays" options="monthly-by-days">
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.index" options="index" required="True">
                <help short="Index of the week in a month at which the recurrence should repeat. For example, if the index is '2', weekDay is 'Monday', interval is 3 and frequency is 'Month', the recurrence will run every second Monday of the month and repeat every 3 months. Value of index can be 1 to 5."/>
                <format maximum="5" minimum="1"/>
              </arg>
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.interval" options="interval" required="True">
                <help short="The interval at which the recurrence should repeat. It signifies the number of months between each recurrence."/>
              </arg>
              <arg type="array<string>" var="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.weekDaysInMonth" options="week-days-in-month">
                <help short="Specific days of the week when the recurrence should repeat."/>
                <item type="string">
                  <enum>
                    <item name="Friday" value="&quot;Friday&quot;"/>
                    <item name="Monday" value="&quot;Monday&quot;"/>
                    <item name="Saturday" value="&quot;Saturday&quot;"/>
                    <item name="Sunday" value="&quot;Sunday&quot;"/>
                    <item name="Thursday" value="&quot;Thursday&quot;"/>
                    <item name="Tuesday" value="&quot;Tuesday&quot;"/>
                    <item name="Wednesday" value="&quot;Wednesday&quot;"/>
                  </enum>
                </item>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.Weekly" options="weekly">
              <arg type="array<string>" var="$body.ScheduleTestsTrigger.recurrence.Weekly.daysOfWeek" options="days-of-week">
                <help short="Recurrence set to repeat on the specified days of the week."/>
                <item type="string">
                  <enum>
                    <item name="Friday" value="&quot;Friday&quot;"/>
                    <item name="Monday" value="&quot;Monday&quot;"/>
                    <item name="Saturday" value="&quot;Saturday&quot;"/>
                    <item name="Sunday" value="&quot;Sunday&quot;"/>
                    <item name="Thursday" value="&quot;Thursday&quot;"/>
                    <item name="Tuesday" value="&quot;Tuesday&quot;"/>
                    <item name="Wednesday" value="&quot;Wednesday&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.Weekly.interval" options="interval">
                <help short="The interval at which the recurrence should repeat. It signifies the number of weeks between each recurrence."/>
              </arg>
            </arg>
            <arg type="object" var="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd" options="recurrence-end">
              <help short="Recurrence end model. You can specify the end either by providing a numberOfOccurrences (which will end the recurrence after the specified number of occurrences) or by providing an endDateTime (which will end the recurrence after the specified date). If neither value is provided, the recurrence will continue until it is manually ended. However, if both values are provided, an error will be thrown."/>
              <arg type="dateTime" var="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd.endDateTime" options="end-date-time">
                <help short="The date after which the recurrence will end. (RFC 3339 literal format)"/>
              </arg>
              <arg type="integer32" var="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd.numberOfOccurrences" options="number-of-occurrences">
                <help short="Number of occurrences after which the recurrence will end."/>
              </arg>
            </arg>
          </arg>
          <arg type="dateTime" var="$body.ScheduleTestsTrigger.startDateTime" options="start-date-time">
            <help short="Start date time of the trigger in UTC timezone. (RFC 3339 literal format)"/>
          </arg>
          <arg type="array<string>" var="$body.ScheduleTestsTrigger.testIds" options="test-ids" required="True">
            <help short="The test id of test to be triggered by this schedule trigger. Currently only one test is supported for a trigger."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$body.description" options="description" group="Body">
          <help short="The description of the trigger."/>
          <format maxLength="100"/>
        </arg>
        <arg type="string" var="$body.displayName" options="display-name" required="True" group="Body">
          <help short="The name of the trigger."/>
          <format maxLength="50" minLength="2"/>
        </arg>
        <arg type="string" var="$body.state" options="state" group="Body">
          <help short="The current state of the trigger."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="Completed" value="&quot;Completed&quot;"/>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Paused" value="&quot;Paused&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="TriggerAdministration_CreateOrUpdateTrigger">
        <http path="/triggers/{triggerId}">
          <request method="patch">
            <path>
              <param type="string" name="triggerId" arg="$Path.triggerId" required="True">
                <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="string" name="description" arg="$body.description">
                    <format maxLength="100"/>
                  </prop>
                  <prop type="string" name="displayName" arg="$body.displayName" required="True">
                    <format maxLength="50" minLength="2"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item arg="$body.ScheduleTestsTrigger" value="&quot;ScheduleTestsTrigger&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="state" arg="$body.state">
                    <enum>
                      <item value="&quot;Active&quot;"/>
                      <item value="&quot;Completed&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Paused&quot;"/>
                    </enum>
                  </prop>
                  <discriminator property="kind" value="ScheduleTestsTrigger">
                    <prop type="object" name="recurrence" arg="$body.ScheduleTestsTrigger.recurrence">
                      <prop type="string" name="frequency" required="True">
                        <enum>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.Cron" value="&quot;Cron&quot;"/>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.Daily" value="&quot;Daily&quot;"/>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.Hourly" value="&quot;Hourly&quot;"/>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates" value="&quot;MonthlyByDates&quot;"/>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays" value="&quot;MonthlyByDays&quot;"/>
                          <item arg="$body.ScheduleTestsTrigger.recurrence.Weekly" value="&quot;Weekly&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="recurrenceEnd" arg="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd">
                        <prop type="dateTime" name="endDateTime" arg="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd.endDateTime"/>
                        <prop type="integer32" name="numberOfOccurrences" arg="$body.ScheduleTestsTrigger.recurrence.recurrenceEnd.numberOfOccurrences"/>
                      </prop>
                      <discriminator property="frequency" value="Cron">
                        <prop type="string" name="cronExpression" arg="$body.ScheduleTestsTrigger.recurrence.Cron.cronExpression" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Daily">
                        <prop type="integer32" name="interval" arg="$body.ScheduleTestsTrigger.recurrence.Daily.interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Hourly">
                        <prop type="integer32" name="interval" arg="$body.ScheduleTestsTrigger.recurrence.Hourly.interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDates">
                        <prop type="array<integer32>" name="datesInMonth" arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates.datesInMonth">
                          <item type="integer32"/>
                        </prop>
                        <prop type="integer32" name="interval" arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDates.interval"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDays">
                        <prop type="integer32" name="index" arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.index" required="True">
                          <format maximum="5" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="interval" arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.interval" required="True"/>
                        <prop type="array<string>" name="weekDaysInMonth" arg="$body.ScheduleTestsTrigger.recurrence.MonthlyByDays.weekDaysInMonth">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="frequency" value="Weekly">
                        <prop type="array<string>" name="daysOfWeek" arg="$body.ScheduleTestsTrigger.recurrence.Weekly.daysOfWeek">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="integer32" name="interval" arg="$body.ScheduleTestsTrigger.recurrence.Weekly.interval"/>
                      </discriminator>
                    </prop>
                    <prop type="dateTime" name="startDateTime" arg="$body.ScheduleTestsTrigger.startDateTime"/>
                    <prop type="array<string>" name="testIds" arg="$body.ScheduleTestsTrigger.testIds" required="True">
                      <item type="string"/>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201 200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="createdBy"/>
                  <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                  <prop type="string" name="description">
                    <format maxLength="100"/>
                  </prop>
                  <prop type="string" name="displayName" required="True">
                    <format maxLength="50" minLength="2"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;ScheduleTestsTrigger&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="lastModifiedBy"/>
                  <prop readOnly="True" type="dateTime" name="lastModifiedDateTime"/>
                  <prop type="string" name="state">
                    <enum>
                      <item value="&quot;Active&quot;"/>
                      <item value="&quot;Completed&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Paused&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="object" name="stateDetails">
                    <prop type="string" name="message"/>
                  </prop>
                  <prop readOnly="True" type="string" name="triggerId">
                    <format pattern="^[a-z0-9_-]*$" maxLength="50" minLength="2"/>
                  </prop>
                  <discriminator property="kind" value="ScheduleTestsTrigger">
                    <prop type="object" name="recurrence">
                      <prop type="string" name="frequency" required="True">
                        <enum>
                          <item value="&quot;Cron&quot;"/>
                          <item value="&quot;Daily&quot;"/>
                          <item value="&quot;Hourly&quot;"/>
                          <item value="&quot;MonthlyByDates&quot;"/>
                          <item value="&quot;MonthlyByDays&quot;"/>
                          <item value="&quot;Weekly&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="recurrenceEnd">
                        <prop type="dateTime" name="endDateTime"/>
                        <prop type="integer32" name="numberOfOccurrences"/>
                      </prop>
                      <discriminator property="frequency" value="Cron">
                        <prop type="string" name="cronExpression" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Daily">
                        <prop type="integer32" name="interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="Hourly">
                        <prop type="integer32" name="interval" required="True"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDates">
                        <prop type="array<integer32>" name="datesInMonth">
                          <item type="integer32"/>
                        </prop>
                        <prop type="integer32" name="interval"/>
                      </discriminator>
                      <discriminator property="frequency" value="MonthlyByDays">
                        <prop type="integer32" name="index" required="True">
                          <format maximum="5" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="interval" required="True"/>
                        <prop type="array<string>" name="weekDaysInMonth">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="frequency" value="Weekly">
                        <prop type="array<string>" name="daysOfWeek">
                          <item type="string">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="integer32" name="interval"/>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="object" name="recurrenceStatus">
                      <prop type="array<dateTime>" name="nextScheduledDateTimes">
                        <item type="dateTime"/>
                      </prop>
                      <prop type="integer32" name="remainingOccurrences"/>
                    </prop>
                    <prop type="dateTime" name="startDateTime"/>
                    <prop type="array<string>" name="testIds" required="True">
                      <item type="string"/>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema readOnly="True" type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
